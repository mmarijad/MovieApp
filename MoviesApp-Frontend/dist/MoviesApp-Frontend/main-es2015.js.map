{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/_services/category.service.ts","./src/app/_services/confirmation-dialog.service.ts","./src/app/_services/director.service.ts","./src/app/_services/movies.service.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/categories/category-list/category-list.component.ts","./src/app/categories/category-list/category-list.component.html","./src/app/categories/category/category.component.ts","./src/app/categories/category/category.component.html","./src/app/confirmation-dialog/confirmation-dialog.component.ts","./src/app/confirmation-dialog/confirmation-dialog.component.html","./src/app/directors/director-list/director-list.component.ts","./src/app/directors/director-list/director-list.component.html","./src/app/directors/director/director.component.ts","./src/app/directors/director/director.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/movies/movie-list/movie-list.component.ts","./src/app/movies/movie-list/movie-list.component.html","./src/app/movies/movie/movie.component.ts","./src/app/movies/movie/movie.component.html","./src/app/nav/nav.component.ts","./src/app/nav/nav.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAAA;AAA2C;AAIgB;;;AAKpD,MAAM,eAAe;IAGxB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAF5B,YAAO,GAAW,wEAAW,CAAC,OAAO,GAAG,MAAM,CAAC;IAEjB,CAAC;IAEhC,WAAW,CAAC,QAAkB;QACjC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAC,YAAY,EAAE,QAAQ,CAAC,CAAC;IAC/D,CAAC;IAEM,cAAc,CAAC,EAAU,EAAE,QAAiB;QAC/C,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAC,aAAa,GAAC,EAAE,EAAC,QAAQ,CAAC,CAAC;IACjE,CAAC;IAEM,cAAc,CAAC,EAAS;QAC3B,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,GAAC,aAAa,GAAC,EAAE,CAAC,CAAC;IAC3D,CAAC;IAEM,aAAa;QAChB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAa,IAAI,CAAC,OAAO,GAAC,YAAY,CAAC,CAAC;IAChE,CAAC;IAEM,eAAe,CAAC,EAAE;QACrB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAW,IAAI,CAAC,OAAO,GAAG,aAAa,GAAG,EAAE,CAAC,CAAC;IACtE,CAAC;IAEM,gBAAgB,CAAC,IAAY;QAChC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAa,GAAG,IAAI,CAAC,OAAO,qBAAqB,IAAI,EAAE,CAAC,CAAC;IACjF,CAAC;;8EA3BQ,eAAe;kGAAf,eAAe,WAAf,eAAe,mBAFZ,MAAM;6FAET,eAAe;cAH3B,wDAAU;eAAC;gBACR,UAAU,EAAE,MAAM;aACrB;;;;;;;;;;;;;;ACRD;AAAA;AAAA;AAAA;AAAA;AAA2C;AAGwD;;;AAI5F,MAAM,yBAAyB;IAClC,YAAoB,YAAsB;QAAtB,iBAAY,GAAZ,YAAY,CAAU;IAAG,CAAC;IAEvC,OAAO,CACV,KAAa,EACb,OAAe,EACf,YAAoB,QAAQ,EAC5B,gBAAwB,UAAU,EAClC,aAAwB,IAAI;QAC5B,MAAM,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,8GAA2B,EAAE,EAAC,IAAI,EAAE,UAAU,EAAC,CAAC,CAAC;QACzF,QAAQ,CAAC,iBAAiB,CAAC,KAAK,GAAG,KAAK,CAAC;QACzC,QAAQ,CAAC,iBAAiB,CAAC,OAAO,GAAG,OAAO,CAAC;QAC7C,QAAQ,CAAC,iBAAiB,CAAC,SAAS,GAAG,SAAS,CAAC;QACjD,QAAQ,CAAC,iBAAiB,CAAC,aAAa,GAAG,aAAa,CAAC;QAEzD,OAAO,QAAQ,CAAC,MAAM,CAAC;IAC3B,CAAC;;kGAhBQ,yBAAyB;4GAAzB,yBAAyB,WAAzB,yBAAyB;6FAAzB,yBAAyB;cAFrC,wDAAU;;;;;;;;;;;;;;ACLX;AAAA;AAAA;AAAA;AAAA;AAA2C;AAIgB;;;AAKpD,MAAM,eAAe;IAGxB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAF5B,YAAO,GAAW,wEAAW,CAAC,OAAO,GAAG,MAAM,CAAC;IAEjB,CAAC;IAEhC,WAAW,CAAC,QAAkB;QACjC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAC,WAAW,EAAE,QAAQ,CAAC,CAAC;IAC9D,CAAC;IAEM,cAAc,CAAC,EAAU,EAAE,QAAiB;QAC/C,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAC,YAAY,GAAC,EAAE,EAAC,QAAQ,CAAC,CAAC;IAChE,CAAC;IAEM,cAAc,CAAC,EAAS;QAC3B,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,GAAC,YAAY,GAAC,EAAE,CAAC,CAAC;IAC1D,CAAC;IAEM,YAAY;QACf,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAa,IAAI,CAAC,OAAO,GAAC,WAAW,CAAC,CAAC;IAC/D,CAAC;IAEM,eAAe,CAAC,EAAE;QACrB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAW,IAAI,CAAC,OAAO,GAAG,YAAY,GAAG,EAAE,CAAC,CAAC;IACrE,CAAC;IAEM,eAAe,CAAC,IAAY;QAC/B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAa,GAAG,IAAI,CAAC,OAAO,oBAAoB,IAAI,EAAE,CAAC,CAAC;IAChF,CAAC;;8EA3BQ,eAAe;kGAAf,eAAe,WAAf,eAAe,mBAFZ,MAAM;6FAET,eAAe;cAH3B,wDAAU;eAAC;gBACR,UAAU,EAAE,MAAM;aACrB;;;;;;;;;;;;;;ACPD;AAAA;AAAA;AAAA;AAAA;AAA2C;AAIgB;;;AAKpD,MAAM,aAAa;IAGtB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAF5B,YAAO,GAAW,wEAAW,CAAC,OAAO,GAAG,MAAM,CAAC;IAEf,CAAC;IAElC,QAAQ,CAAC,KAAY;QACxB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,QAAQ,EAAE,KAAK,CAAC,CAAC;IAC1D,CAAC;IAEM,WAAW,CAAC,EAAU,EAAE,KAAY;QACvC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,SAAS,GAAG,EAAE,EAAE,KAAK,CAAC,CAAC;IAC/D,CAAC;IAEM,SAAS;QACZ,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAU,IAAI,CAAC,OAAO,GAAG,QAAQ,CAAC,CAAC;IAC3D,CAAC;IAEM,WAAW,CAAC,EAAU;QACzB,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,GAAG,SAAS,GAAG,EAAE,CAAC,CAAC;IAC3D,CAAC;IAEM,YAAY,CAAC,EAAE;QAClB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAQ,IAAI,CAAC,OAAO,GAAG,SAAS,GAAG,EAAE,CAAC,CAAC;IAC/D,CAAC;IAEM,mCAAmC,CAAC,aAAqB;QAC5D,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAU,GAAG,IAAI,CAAC,OAAO,mDAAmD,aAAa,EAAE,CAAC,CAAC;IACrH,CAAC;;0EA3BQ,aAAa;gGAAb,aAAa,WAAb,aAAa,mBAFV,MAAM;6FAET,aAAa;cAHzB,wDAAU;eAAC;gBACR,UAAU,EAAE,MAAM;aACrB;;;;;;;;;;;;;;ACTD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AACD;AACwB;AACd;AAC2B;AACd;AACa;AACd;;;AAG5E,MAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,kEAAa,EAAE;IAC1C,EAAE,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,0FAAkB,EAAE;IACjD,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,4EAAc,EAAE;IAC5C,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,4EAAc,EAAE;IAChD,EAAE,IAAI,EAAE,YAAY,EAAE,SAAS,EAAE,uGAAqB,EAAE;IACxD,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,yFAAiB,EAAE;IAClD,EAAE,IAAI,EAAE,cAAc,EAAE,SAAS,EAAE,yFAAiB,EAAE;IACtD,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,sGAAqB,EAAE;IACvD,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,wFAAiB,EAAE;IAClD,EAAE,IAAI,EAAE,cAAc,EAAE,SAAS,EAAE,wFAAiB,EAAE;CACvD,CAAC;AAMK,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;6FAEX,gBAAgB;cAJ5B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;AC3BD;AAAA;AAAA;AAAA;AAAA;AAA0C;;;;AAOnC,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,oBAAoB,CAAC;KAC9B;;wEAFY,YAAY;4FAAZ,YAAY;QCPzB,qEAAmB;QACnB,2EAA+B;;6FDMlB,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,qBAAqB,CAAC;aACnC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AAEe;AACT;AAEQ;AACC;AACX;AACqD;AACrB;AACc;AACf;AACc;AAC1B;AACc;AAC3B;AACG;AACK;AACI;AACqB;AACrB;;AA+BxD,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBART;QACT,uEAAa;QACb,2EAAe;QACf,2EAAe;QACf,gGAAyB;KAC1B,YAZQ;YACP,uEAAa;YACb,qEAAgB;YAChB,0DAAW;YACX,oEAAgB;YAChB,oEAAS;SACV;mIASU,SAAS,mBA1BlB,2DAAY;QACZ,8GAA2B;QAC3B,yFAAiB;QACjB,uGAAqB;QACrB,yFAAiB;QACjB,uGAAqB;QACrB,6EAAc;QACd,2FAAkB;QAClB,gEAAY;QACZ,mEAAa,aAGb,uEAAa;QACb,qEAAgB;QAChB,0DAAW;QACX,oEAAgB;QAChB,oEAAS;6FAUA,SAAS;cA5BrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;oBACZ,8GAA2B;oBAC3B,yFAAiB;oBACjB,uGAAqB;oBACrB,yFAAiB;oBACjB,uGAAqB;oBACrB,6EAAc;oBACd,2FAAkB;oBAClB,gEAAY;oBACZ,mEAAa;iBACd;gBACD,OAAO,EAAE;oBACP,uEAAa;oBACb,qEAAgB;oBAChB,0DAAW;oBACX,oEAAgB;oBAChB,oEAAS;iBACV;gBACD,SAAS,EAAE;oBACT,uEAAa;oBACb,2EAAe;oBACf,2EAAe;oBACf,gGAAyB;iBAC1B;gBACD,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;ACnDD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAKnB;AACe;;;;;;;;;;IC0B9B,qEACI;IAAA,qEACI;IAAA,uDACJ;IAAA,4DAAK;IACL,yEACI;IAAA,wEACI;IADa,0WAAqC;IAClD,mEAA2B;IAC/B,4DAAI;IACJ,wEACI;IADc,0WAAqC;IACnD,mEAAgC;IACpC,4DAAI;IACR,4DAAK;IACT,4DAAK;;;IAVG,0DACJ;IADI,4FACJ;;ADrBb,MAAM,qBAAqB;IAKhC,YAAoB,MAAc,EAAU,OAAwB,EAAU,MAAqB,EAC7E,yBAAoD;QADtD,WAAM,GAAN,MAAM,CAAQ;QAAU,YAAO,GAAP,OAAO,CAAiB;QAAU,WAAM,GAAN,MAAM,CAAe;QAC7E,8BAAyB,GAAzB,yBAAyB,CAA2B;QAHnE,uBAAkB,GAAoB,IAAI,4CAAO,EAAU,CAAC;IAGW,CAAC;IAE/E,QAAQ;QACJ,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,mEAAY,CAAC,IAAI,CAAC,CAAC;aAC/C,SAAS,CAAC,GAAG,EAAE;YACd,IAAI,CAAC,MAAM,EAAE,CAAC;QAChB,CAAC,CAAC,CAAC;IACL,CAAC;IAEK,aAAa;QACnB,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,CAAC,SAAS,CAAC,UAAU,CAAC,EAAE;YAClD,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC/B,CAAC,CAAC;IACJ,CAAC;IAEO,MAAM;QACZ,IAAI,IAAI,CAAC,UAAU,KAAK,EAAE,EAAE;YAC1B,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;gBAClE,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC;YAC7B,CAAC,EAAE,KAAK,CAAC,EAAE;gBACT,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;YACvB,CAAC,CAAC,CAAC;SACJ;aAAM;YACL,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,CAAC,SAAS,CAAC,UAAU,CAAC,EAAE,CAAC,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC,CAAC;SACpF;IACH,CAAC;IAEM,WAAW;QAChB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;IACtC,CAAC;IAEM,cAAc,CAAC,UAAkB;QACtC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,GAAG,UAAU,CAAC,CAAC,CAAC;IACpD,CAAC;IAEM,cAAc,CAAC,UAAkB;QACtC,IAAI,CAAC,yBAAyB,CAAC,OAAO,CAAC,OAAO,EAAE,sDAAsD,CAAC;aACpG,IAAI,CAAC,GAAG,EAAE,CACT,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,GAAG,EAAE;YACrD,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,yBAAyB,CAAC,CAAC;YAC/C,IAAI,CAAC,aAAa,EAAE,CAAC;QACvB,CAAC,EACC,KAAK,CAAC,EAAE;YACN,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,+CAA+C,CAAC,CAAC;QACrE,CAAC,CAAC,CAAC;aACN,KAAK,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;IACrB,CAAC;IAEM,gBAAgB;QACrB,IAAI,CAAC,kBAAkB,CAAC,IAAI,EAAE,CAAC;IACjC,CAAC;;0FAzDU,qBAAqB;qGAArB,qBAAqB;QCdlC,yEACI;QAAA,wEAAkC;QAAA,qEAAU;QAAA,4DAAK;QACrD,4DAAM;QAEN,yEACI;QAAA,4EAAsE;QAAxB,6IAAS,iBAAa,IAAC;QAAC,0EAAe;QAAA,4DAAS;QAC9F,gEAEA;QAAA,yEACI;QAAA,2EAAoB;QAAA,6EAAa;QAAA,4DAAQ;QACzC,0EACI;QAAA,0EACI;QAAA,0EACI;QAAA,mEAA8B;QAClC,4DAAM;QACV,4DAAM;QACN,6EACJ;QADuB,8LAAwB,qGAAkB,sBAAkB,IAApC;QAA3C,4DACJ;QAAA,4DAAM;QACV,4DAAM;QAEN,6EACI;QAAA,yEACI;QAAA,sEACI;QAAA,0EACI;QAAA,wEACJ;QAAA,4DAAK;QACL,sEACI;QAAA,oEACJ;QAAA,4DAAK;QACT,4DAAK;QACT,4DAAQ;QACJ,yEACI;QAAA,kHACI;QAYR,4DAAQ;QAChB,4DAAQ;QACZ,4DAAM;;QA/ByB,2DAAwB;QAAxB,mFAAwB;QAgBnC,0DAAmC;QAAnC,mFAAmC;;6FDlB1C,qBAAqB;cANjC,uDAAS;eAAC;gBACT,QAAQ,EAAE,mBAAmB;gBAC7B,WAAW,EAAE,gCAAgC;gBAC7C,SAAS,EAAE,CAAC,+BAA+B,CAAC;aAC7C;;;;;;;;;;;;;;AEZD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;;;ICQ1C,0EAAmE;IAAA,4FAAiC;IAAA,4DAAM;;;ADI3G,MAAM,iBAAiB;IAG5B,YAAmB,OAAwB,EACvB,MAAc,EACd,KAAqB,EACrB,MAAqB;QAHtB,YAAO,GAAP,OAAO,CAAiB;QACvB,WAAM,GAAN,MAAM,CAAQ;QACd,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAe;IAAI,CAAC;IAE9C,QAAQ;QACN,IAAI,CAAC,SAAS,EAAE,CAAC;QAEjB,IAAI,EAAE,CAAC;QACP,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YACnC,EAAE,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;QACpB,CAAC,CAAC,CAAC;QAEH,IAAI,EAAE,IAAI,IAAI,EAAE;YACd,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;gBACpD,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;YAC3B,CAAC,EAAE,KAAK,CAAC,EAAE;gBACT,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,iDAAiD,CAAC,CAAC;YACvE,CAAC,CAAC,CAAC;SACJ;aAAM;YACL,IAAI,CAAC,SAAS,EAAE,CAAC;SAClB;IACH,CAAC;IAEM,SAAS,CAAC,IAAa;QAC5B,IAAI,IAAI,IAAI,IAAI,EAAE;YAChB,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;SACnB;QAED,IAAI,CAAC,QAAQ,GAAG;YACd,EAAE,EAAE,CAAC;YACL,IAAI,EAAE,EAAE;SACT,CAAC;IACJ,CAAC;IAEM,QAAQ,CAAC,IAAY;QAC1B,IAAI,IAAI,CAAC,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE;YACvB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;SAC3B;aAAM;YACL,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;SAC3B;IACH,CAAC;IAEM,cAAc,CAAC,IAAY;QAChC,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,GAAG,EAAE;YACvD,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,iCAAiC,CAAC,CAAC;YACvD,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;YACrB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;QACxC,CAAC,EAAE,GAAG,EAAE;YACN,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,gDAAgD,CAAC,CAAC;QACtE,CAAC,CAAC,CAAC;IACL,CAAC;IAEM,cAAc,CAAC,IAAY;QAChC,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,GAAG,EAAE;YAC9E,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,oCAAoC,CAAC,CAAC;YAC1D,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;YACrB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;QACxC,CAAC,EAAE,GAAG,EAAE;YACN,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,iDAAiD,CAAC,CAAC;QACvE,CAAC,CAAC,CAAC;IACL,CAAC;IAEM,MAAM;QACX,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;IACxC,CAAC;;kFApEU,iBAAiB;iGAAjB,iBAAiB;;QCZ9B,yEACI;QAAA,6EACE;QADmB,qRAAU,iBAAc,IAAC;QAC5C,wEAAqC;QAAA,qEAAU;QAAA,4DAAK;QACpD,8EACA;QAD6C,0LAAyB;QAAtE,4DACA;QAAA,yEACE;QAAA,8EAGA;QAHmC,4LAA2B;QAA9D,4DAGA;QAAA,+GAAmE;QACrE,4DAAM;QACN,2EACE;QAAA,8EAA6E;QAAA,kEAAM;QAAA,4DAAS;QAC5F,8EAAiE;QAAnB,0IAAS,YAAQ,IAAC;QAAC,oEAAQ;QAAA,4DAAS;QACpF,4DAAM;QACR,4DAAO;QACT,4DAAM;;;;QAZ2C,0DAAyB;QAAzB,oFAAyB;QAEjC,0DAA2B;QAA3B,sFAA2B;QAGhC,0DAAoC;QAApC,4FAAoC;QAG7B,0DAAyB;QAAzB,iFAAyB;;6FDCzD,iBAAiB;cAL7B,uDAAS;eAAC;gBACT,QAAQ,EAAE,cAAc;gBACxB,WAAW,EAAE,2BAA2B;gBACxC,SAAS,EAAE,CAAC,0BAA0B,CAAC;aACxC;;;;;;;;;;;;;;AEXD;AAAA;AAAA;AAAA;AAAyD;;;AAQlD,MAAM,2BAA2B;IAOtC,YAAoB,WAA2B;QAA3B,gBAAW,GAAX,WAAW,CAAgB;IAAI,CAAC;IAEpD,QAAQ;IACR,CAAC;IAEM,OAAO;QACZ,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;IAChC,CAAC;IAEM,MAAM;QACX,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;IAC/B,CAAC;IAEM,OAAO;QACZ,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC;IAC7B,CAAC;;sGAtBU,2BAA2B;2GAA3B,2BAA2B;QCRxC,yEACI;QAAA,wEAAyC;QAAA,uDAAW;QAAA,4DAAK;QACzD,4EACI;QAD+D,mJAAS,aAAS,IAAC;QAClF,0EAAyB;QAAA,iEAAO;QAAA,4DAAO;QAC3C,4DAAS;QACb,4DAAM;QACN,yEACI;QAAA,uDACJ;QAAA,4DAAM;QACN,yEACI;QAAA,4EAA+D;QAApB,mJAAS,aAAS,IAAC;QAAC,wDAAmB;QAAA,4DAAS;QAC3F,6EAAiE;QAApB,oJAAS,YAAQ,IAAC;QAAE,wDAAe;QAAA,4DAAS;QAC7F,4DAAM;;QAXuC,0DAAW;QAAX,0EAAW;QAMpD,0DACJ;QADI,wFACJ;QAEmE,0DAAmB;QAAnB,kFAAmB;QACjB,0DAAe;QAAf,wFAAe;;6FDHvE,2BAA2B;cALvC,uDAAS;eAAC;gBACT,QAAQ,EAAE,yBAAyB;gBACnC,WAAW,EAAE,sCAAsC;gBACnD,SAAS,EAAE,CAAC,qCAAqC,CAAC;aACnD;;kBAGE,mDAAK;;kBACL,mDAAK;;kBACL,mDAAK;;kBACL,mDAAK;;;;;;;;;;;;;;AEbR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAKnB;AACe;;;;;;;;;;IC0B9B,qEACI;IAAA,qEACI;IAAA,uDACJ;IAAA,4DAAK;IACL,yEACI;IAAA,wEACI;IADa,0WAAqC;IAClD,mEAA2B;IAC/B,4DAAI;IACJ,wEACI;IADc,0WAAqC;IACnD,mEAAgC;IACpC,4DAAI;IACR,4DAAK;IACT,4DAAK;;;IAVG,0DACJ;IADI,4FACJ;;ADrBb,MAAM,qBAAqB;IAKhC,YAAoB,MAAc,EAAU,OAAwB,EAAU,MAAqB,EAC7E,yBAAoD;QADtD,WAAM,GAAN,MAAM,CAAQ;QAAU,YAAO,GAAP,OAAO,CAAiB;QAAU,WAAM,GAAN,MAAM,CAAe;QAC7E,8BAAyB,GAAzB,yBAAyB,CAA2B;QAHnE,uBAAkB,GAAoB,IAAI,4CAAO,EAAU,CAAC;IAGW,CAAC;IAE/E,QAAQ;QACJ,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,mEAAY,CAAC,IAAI,CAAC,CAAC;aAC/C,SAAS,CAAC,GAAG,EAAE;YACd,IAAI,CAAC,MAAM,EAAE,CAAC;QAChB,CAAC,CAAC,CAAC;IACL,CAAC;IAEK,YAAY;QAClB,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC,SAAS,CAAC,SAAS,CAAC,EAAE;YAChD,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC7B,CAAC,CAAC;IACJ,CAAC;IAEO,MAAM;QACZ,IAAI,IAAI,CAAC,UAAU,KAAK,EAAE,EAAE;YAC1B,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;gBACjE,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;YAC5B,CAAC,EAAE,KAAK,CAAC,EAAE;gBACT,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;YACtB,CAAC,CAAC,CAAC;SACJ;aAAM;YACL,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC,SAAS,CAAC,SAAS,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC,CAAC;SAChF;IACH,CAAC;IAEM,WAAW;QAChB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;IACtC,CAAC;IAEM,cAAc,CAAC,UAAkB;QACtC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,GAAG,UAAU,CAAC,CAAC,CAAC;IACpD,CAAC;IAEM,cAAc,CAAC,UAAkB;QACtC,IAAI,CAAC,yBAAyB,CAAC,OAAO,CAAC,OAAO,EAAE,qDAAqD,CAAC;aACnG,IAAI,CAAC,GAAG,EAAE,CACT,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,GAAG,EAAE;YACrD,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,sBAAsB,CAAC,CAAC;YAC5C,IAAI,CAAC,YAAY,EAAE,CAAC;QACtB,CAAC,EACC,KAAK,CAAC,EAAE;YACN,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,8CAA8C,CAAC,CAAC;QACpE,CAAC,CAAC,CAAC;aACN,KAAK,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;IACrB,CAAC;IAEM,eAAe;QACpB,IAAI,CAAC,kBAAkB,CAAC,IAAI,EAAE,CAAC;IACjC,CAAC;;0FAzDU,qBAAqB;qGAArB,qBAAqB;QCdlC,yEACI;QAAA,wEAAkC;QAAA,oEAAS;QAAA,4DAAK;QACpD,4DAAM;QAEN,yEACI;QAAA,4EAAsE;QAAxB,6IAAS,iBAAa,IAAC;QAAC,wEAAa;QAAA,4DAAS;QAC5F,gEAEA;QAAA,yEACI;QAAA,2EAAoB;QAAA,6EAAa;QAAA,4DAAQ;QACzC,0EACI;QAAA,0EACI;QAAA,0EACI;QAAA,mEAA8B;QAClC,4DAAM;QACV,4DAAM;QACN,6EACJ;QADuB,8LAAwB,qGAAkB,qBAAiB,IAAnC;QAA3C,4DACJ;QAAA,4DAAM;QACV,4DAAM;QAEN,6EACI;QAAA,yEACI;QAAA,sEACI;QAAA,0EACI;QAAA,sEACJ;QAAA,4DAAK;QACL,sEACI;QAAA,oEACJ;QAAA,4DAAK;QACT,4DAAK;QACT,4DAAQ;QACJ,yEACI;QAAA,kHACI;QAYR,4DAAQ;QAChB,4DAAQ;QACZ,4DAAM;;QA/ByB,2DAAwB;QAAxB,mFAAwB;QAgBnC,0DAAkC;QAAlC,kFAAkC;;6FDlBzC,qBAAqB;cANjC,uDAAS;eAAC;gBACT,QAAQ,EAAE,mBAAmB;gBAC7B,WAAW,EAAE,gCAAgC;gBAC7C,SAAS,EAAE,CAAC,+BAA+B,CAAC;aAC7C;;;;;;;;;;;;;;AEZD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;;;ICQ1C,0EAAmE;IAAA,4FAAiC;IAAA,4DAAM;;;IAM1G,0EAAmE;IAAA,4FAAiC;IAAA,4DAAM;;;ADF3G,MAAM,iBAAiB;IAG5B,YAAmB,OAAwB,EACvB,MAAc,EACd,KAAqB,EACrB,MAAqB;QAHtB,YAAO,GAAP,OAAO,CAAiB;QACvB,WAAM,GAAN,MAAM,CAAQ;QACd,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAe;IAAI,CAAC;IAE9C,QAAQ;QACN,IAAI,CAAC,SAAS,EAAE,CAAC;QAEjB,IAAI,EAAE,CAAC;QACP,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YACnC,EAAE,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;QACpB,CAAC,CAAC,CAAC;QAEH,IAAI,EAAE,IAAI,IAAI,EAAE;YACd,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;gBACpD,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;YAC3B,CAAC,EAAE,KAAK,CAAC,EAAE;gBACT,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,gDAAgD,CAAC,CAAC;YACtE,CAAC,CAAC,CAAC;SACJ;aAAM;YACL,IAAI,CAAC,SAAS,EAAE,CAAC;SAClB;IACH,CAAC;IAEM,SAAS,CAAC,IAAa;QAC5B,IAAI,IAAI,IAAI,IAAI,EAAE;YAChB,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;SACnB;QAED,IAAI,CAAC,QAAQ,GAAG;YACd,EAAE,EAAE,CAAC;YACL,IAAI,EAAE,EAAE;YACR,QAAQ,EAAE,EAAE;SACb,CAAC;IACJ,CAAC;IAEM,QAAQ,CAAC,IAAY;QAC1B,IAAI,IAAI,CAAC,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE;YACvB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;SAC3B;aAAM;YACL,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;SAC3B;IACH,CAAC;IAEM,cAAc,CAAC,IAAY;QAChC,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,GAAG,EAAE;YACvD,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,gCAAgC,CAAC,CAAC;YACtD,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;YACrB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;QACvC,CAAC,EAAE,GAAG,EAAE;YACN,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,+CAA+C,CAAC,CAAC;QACrE,CAAC,CAAC,CAAC;IACL,CAAC;IAEM,cAAc,CAAC,IAAY;QAChC,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,GAAG,EAAE;YAC9E,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,kCAAkC,CAAC,CAAC;YACxD,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;YACrB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;QACvC,CAAC,EAAE,GAAG,EAAE;YACN,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,gDAAgD,CAAC,CAAC;QACtE,CAAC,CAAC,CAAC;IACL,CAAC;IAEM,MAAM;QACX,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;IACvC,CAAC;;kFArEU,iBAAiB;iGAAjB,iBAAiB;;QCZ9B,yEACI;QAAA,6EACE;QADmB,qRAAU,iBAAc,IAAC;QAC5C,wEAAqC;QAAA,mEAAQ;QAAA,4DAAK;QAClD,8EACA;QAD6C,0LAAyB;QAAtE,4DACA;QAAA,yEACE;QAAA,8EAGA;QAHmC,4LAA2B;QAA9D,4DAGA;QAAA,+GAAmE;QACrE,4DAAM;QACN,0EACE;QAAA,gFAGA;QAHuC,iMAA+B;QAAtE,4DAGA;QAAA,+GAAmE;QACrE,4DAAM;QACN,2EACE;QAAA,8EAA6E;QAAA,kEAAM;QAAA,4DAAS;QAC5F,8EAAiE;QAAnB,0IAAS,YAAQ,IAAC;QAAC,oEAAQ;QAAA,4DAAS;QACpF,4DAAM;QACR,4DAAO;QACT,4DAAM;;;;QAlB2C,0DAAyB;QAAzB,oFAAyB;QAEjC,0DAA2B;QAA3B,sFAA2B;QAGhC,0DAAoC;QAApC,4FAAoC;QAG3B,0DAA+B;QAA/B,0FAA+B;QAGxC,0DAAoC;QAApC,4FAAoC;QAG7B,0DAAyB;QAAzB,iFAAyB;;6FDLzD,iBAAiB;cAL7B,uDAAS;eAAC;gBACT,QAAQ,EAAE,cAAc;gBACxB,WAAW,EAAE,2BAA2B;gBACxC,SAAS,EAAE,CAAC,0BAA0B,CAAC;aACxC;;;;;;;;;;;;;;AEXD;AAAA;AAAA;AAAA;AAAkD;;;;AAO3C,MAAM,aAAa;IAExB,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;0EALU,aAAa;6FAAb,aAAa;QCP1B,yEACI;QAAA,qEAAI;QAAA,oFAAoB;QAAA,4DAAK;QAC7B,uEAAgB;QAAA,kGAAkC;QAAA,4DAAI;QACtD,yEACI;QAAA,4EAA+D;QAAA,6EAAkB;QAAA,4DAAS;QAC9F,4DAAM;QACV,4DAAM;;QAFsC,0DAA0B;QAA1B,6IAA0B;;6FDGzD,aAAa;cALzB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,uBAAuB;gBACpC,SAAS,EAAE,CAAC,sBAAsB,CAAC;aACpC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAKnB;AACe;;;;;;;;;;IC0BpC,qEACE;IAAA,qEAAI;IAAA,uDAAc;IAAA,4DAAK;IACvB,qEAAI;IAAA,uDAAkG;;IAAA,4DAAK;IAC3G,qEAAI;IAAA,uDAAsB;IAAA,4DAAK;IAC/B,qEAAI;IAAA,uDAAuD;IAAA,4DAAK;IAChE,sEAAI;IAAA,wDAAc;IAAA,4DAAK;IACvB,0EACI;IAAA,yEAAiD;IAAhC,+VAA+B;IAAC,oEAA2B;IAAC,4DAAI;IACjF,yEAA6E;IAA3D,+VAA+B;IAA4B,oEAAgC;IAAC,4DAAI;IACtH,4DAAK;IACP,4DAAK;;;IATC,0DAAc;IAAd,8EAAc;IACd,0DAAkG;IAAlG,+NAAkG;IAClG,0DAAsB;IAAtB,sFAAsB;IACtB,0DAAuD;IAAvD,uIAAuD;IACvD,0DAAc;IAAd,8EAAc;;ADxBvB,MAAM,kBAAkB;IAM7B,YAAoB,MAAc,EACd,OAAsB,EACtB,MAAqB,EACrB,yBAAoD;QAHpD,WAAM,GAAN,MAAM,CAAQ;QACd,YAAO,GAAP,OAAO,CAAe;QACtB,WAAM,GAAN,MAAM,CAAe;QACrB,8BAAyB,GAAzB,yBAAyB,CAA2B;QALjE,uBAAkB,GAAoB,IAAI,4CAAO,EAAU,CAAC;IAKS,CAAC;IAE7E,QAAQ;QACN,IAAI,CAAC,SAAS,EAAE,CAAC;QAEjB,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,mEAAY,CAAC,IAAI,CAAC,CAAC;aAC/C,SAAS,CAAC,GAAG,EAAE;YACd,IAAI,CAAC,MAAM,EAAE,CAAC;QAChB,CAAC,CAAC,CAAC;IACL,CAAC;IAEO,SAAS;QAEf,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YAC1C,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;YACrB,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC;QAC5B,CAAC,CAAC,CAAC;IACL,CAAC;IAEM,QAAQ;QACb,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;IACnC,CAAC;IAEM,WAAW,CAAC,OAAe;QAChC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,SAAS,GAAG,OAAO,CAAC,CAAC,CAAC;IAC9C,CAAC;IAEM,WAAW,CAAC,OAAe;QAChC,IAAI,CAAC,yBAAyB,CAAC,OAAO,CAAC,OAAO,EAAE,gDAAgD,CAAC;aAC9F,IAAI,CAAC,GAAG,EAAE,CACT,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,GAAG,EAAE;YAC/C,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC;YACzC,IAAI,CAAC,SAAS,EAAE,CAAC;QACnB,CAAC,EACC,GAAG,CAAC,EAAE;YACJ,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,0CAA0C,CAAC,CAAC;QAChE,CAAC,CAAC,CAAC;aACN,KAAK,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;IACrB,CAAC;IAEM,YAAY;QACjB,IAAI,CAAC,kBAAkB,CAAC,IAAI,EAAE,CAAC;IACjC,CAAC;IAEO,MAAM;QACZ,IAAI,IAAI,CAAC,UAAU,KAAK,EAAE,EAAE;YAC1B,IAAI,CAAC,OAAO,CAAC,mCAAmC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE;gBAClF,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;YACtB,CAAC,EAAE,KAAK,CAAC,EAAE;gBACT,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;YACnB,CAAC,CAAC,CAAC;SACJ;aAAM;YACL,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,CAAC;SACpE;IACH,CAAC;;oFA/DU,kBAAkB;kGAAlB,kBAAkB;QCb/B,yEACI;QAAA,wEAAkC;QAAA,kEAAO;QAAA,4DAAK;QAChD,4DAAM;QAEN,yEACE;QAAA,4EAAmE;QAArB,0IAAS,cAAU,IAAC;QAAC,oEAAS;QAAA,4DAAS;QACrF,gEAEA;QAAA,yEACI;QAAA,2EAAoB;QAAA,6EAAa;QAAA,4DAAQ;QACzC,0EACE;QAAA,0EACE;QAAA,0EACI;QAAA,mEAA6B;QACjC,4DAAM;QACR,4DAAM;QACN,6EACF;QADqB,2LAAwB,kGAAkB,kBAAc,IAAhC;QAA3C,4DACF;QAAA,4DAAM;QACR,4DAAM;QAER,6EACI;QAAA,yEACI;QAAA,sEACA;QAAA,sEAAI;QAAA,uEAAW;QAAA,4DAAK;QACpB,sEAAI;QAAA,gEAAI;QAAA,4DAAK;QACb,sEAAI;QAAA,sEAAU;QAAA,4DAAK;QACnB,sEAAI;QAAA,oEAAQ;QAAA,4DAAK;QACjB,sEAAI;QAAA,kEAAM;QAAA,4DAAK;QACf,sEAAI;QAAA,kEAAM;QAAA,4DAAK;QACjB,4DAAK;QACP,4DAAQ;QACR,yEACE;QAAA,iHACE;QAUJ,4DAAQ;QAEZ,4DAAQ;QACV,4DAAM;;QA9BqB,2DAAwB;QAAxB,mFAAwB;QAgBvC,2DAA4B;QAA5B,+EAA4B;;6FDnB7B,kBAAkB;cAL9B,uDAAS;eAAC;gBACT,QAAQ,EAAE,gBAAgB;gBAC1B,WAAW,EAAE,6BAA6B;gBAC1C,SAAS,EAAE,CAAC,4BAA4B,CAAC;aAC1C;;;;;;;;;;;;;;AEZD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;;;;;ICQ1C,0EAAmE;IAAA,uFAA4B;IAAA,4DAAM;;;IAOrG,0EAAuC;IAAA,uFACvC;IAAA,4DAAM;;;IAKJ,6EACE;IAAA,uDACF;IAAA,4DAAS;;;IAFmC,6FAAuB;IACjE,0DACF;IADE,6FACF;;;IAEF,0EAA+E;IAAA,wFAA6B;IAAA,4DAAM;;;IAKhH,6EACE;IAAA,uDACF;IAAA,4DAAS;;;IAFkC,6FAAuB;IAChE,0DACF;IADE,6HACF;;;IAEF,0EAA+E;IAAA,sFAA2B;IAAA,4DAAM;;;IAKhH,0EAAuC;IAAA,sGAA2C;IAAA,4DAAM;;;ADzBzF,MAAM,cAAc;IAKzB,YAAmB,OAAsB,EACrB,eAAgC,EAChC,eAAgC,EAChC,MAAc,EACd,KAAqB,EACrB,MAAqB;QALtB,YAAO,GAAP,OAAO,CAAe;QACrB,oBAAe,GAAf,eAAe,CAAiB;QAChC,oBAAe,GAAf,eAAe,CAAiB;QAChC,WAAM,GAAN,MAAM,CAAQ;QACd,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAe;IAAI,CAAC;IAE9C,QAAQ;QACN,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,IAAI,EAAE,CAAC;QACP,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YACnC,EAAE,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;QACpB,CAAC,CAAC,CAAC;QAEH,IAAI,EAAE,IAAI,IAAI,EAAE;YACd,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE;gBAC9C,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;YACtB,CAAC,EAAE,GAAG,CAAC,EAAE;gBACT,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,+CAA+C,CAAC,CAAC;YACrE,CAAC,CAAC,CAAC;SACJ;aAAM;YACL,IAAI,CAAC,SAAS,EAAE,CAAC;SAClB;QAED,IAAI,CAAC,eAAe,CAAC,aAAa,EAAE,CAAC,SAAS,CAAC,UAAU,CAAC,EAAE;YAC1D,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC/B,CAAC,EAAE,GAAG,CAAC,EAAE;YACP,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,+CAA+C,CAAC,CAAC;QACrE,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,eAAe,CAAC,YAAY,EAAE,CAAC,SAAS,CAAC,SAAS,CAAC,EAAE;YACxD,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC7B,CAAC,EAAE,GAAG,CAAC,EAAE;YACP,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,+CAA+C,CAAC,CAAC;QACrE,CAAC,CAAC,CAAC;IACL,CAAC;IAEM,QAAQ,CAAC,IAAY;QAC1B,IAAI,CAAC,KAAK,CAAC,UAAU,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;QACtD,IAAI,CAAC,KAAK,CAAC,UAAU,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;QACtD,IAAI,IAAI,CAAC,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE;YACvB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;SACzB;aAAM;YACL,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;SACzB;IACH,CAAC;IAEM,YAAY,CAAC,IAAY;QAC9B,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,GAAG,EAAE;YACpD,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,2BAA2B,CAAC,CAAC;YACjD,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;YACrB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;QACpC,CAAC,EAAE,GAAG,EAAE;YACN,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,8CAA8C,CAAC,CAAC;QACpE,CAAC,CAAC,CAAC;IACL,CAAC;IAEM,YAAY,CAAC,IAAY;QAC9B,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,GAAG,EAAE;YAC3E,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,8BAA8B,CAAC,CAAC;YACpD,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;YACrB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;QACpC,CAAC,EAAE,GAAG,EAAE;YACN,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,+CAA+C,CAAC,CAAC;QACrE,CAAC,CAAC,CAAC;IACL,CAAC;IAEM,MAAM;QACX,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;IACpC,CAAC;IAEO,SAAS,CAAC,IAAa;QAC7B,IAAI,IAAI,IAAI,IAAI,EAAE;YAChB,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;SACnB;QAED,IAAI,CAAC,QAAQ,GAAG;YACd,EAAE,EAAE,CAAC;YACL,IAAI,EAAE,EAAE;YACR,WAAW,EAAE,EAAE;YACf,UAAU,EAAE,IAAI;YAChB,UAAU,EAAE,IAAI;YAChB,IAAI,EAAE,IAAI;SACX,CAAC;IACJ,CAAC;;4EAzFU,cAAc;8FAAd,cAAc;;QCd3B,yEACI;QAAA,6EACE;QADmB,mRAAU,iBAAc,IAAC;QAC5C,wEAAqC;QAAA,+DAAI;QAAA,4DAAK;QAC9C,8EAEA;QAF6C,uLAAyB;QAAtE,4DAEA;QAAA,yEACE;QAAA,8EAEA;QAFmC,yLAA2B;QAA9D,4DAEA;QAAA,4GAAmE;QACrE,4DAAM;QACN,0EACE;QAAA,mFAG+B;QAHc,oMAAkC;QAG3D,4DAAW;QAC/B,4GAAuC;QAEzC,4DAAM;QACN,0EACE;QAAA,kFACE;QADyD,iMAAiC;QAC1F,8EAA8C;QAAA,sEAAU;QAAA,4DAAS;QACjE,mHACE;QAEJ,4DAAS;QACT,4GAA+E;QACjF,4DAAM;QACN,0EACE;QAAA,kFACE;QADyD,iMAAiC;QAC1F,8EAA8C;QAAA,oEAAQ;QAAA,4DAAS;QAC/D,mHACE;QAEJ,4DAAS;QACT,4GAA+E;QACjF,4DAAM;QACN,0EACE;QAAA,gFAEA;QAFmC,0LAA2B;QAA9D,4DAEA;QAAA,4GAAuC;QACzC,4DAAM;QAEN,2EACE;QAAA,8EAA6E;QAAA,kEAAM;QAAA,4DAAS;QAC5F,8EAAiE;QAAnB,uIAAS,YAAQ,IAAC;QAAC,oEAAQ;QAAA,4DAAS;QACpF,4DAAM;QAER,4DAAO;QACT,4DAAM;;;;;;QA7C2C,0DAAyB;QAAzB,oFAAyB;QAGjC,0DAA2B;QAA3B,sFAA2B;QAEhC,0DAAoC;QAApC,4FAAoC;QAGrB,0DAAkC;QAAlC,6FAAkC;QAQpB,0DAAiC;QAAjC,4FAAiC;QAElF,0DAAmC;QAAnC,mFAAmC;QAIf,0DAAgD;QAAhD,4FAAgD;QAGnB,0DAAiC;QAAjC,4FAAiC;QAElF,0DAAkC;QAAlC,kFAAkC;QAId,0DAAgD;QAAhD,4FAAgD;QAG3C,0DAA2B;QAA3B,sFAA2B;QAMzB,0DAAyB;QAAzB,iFAAyB;;6FD7BzD,cAAc;cAL1B,uDAAS;eAAC;gBACT,QAAQ,EAAE,WAAW;gBACrB,WAAW,EAAE,wBAAwB;gBACrC,SAAS,EAAE,CAAC,uBAAuB,CAAC;aACrC;;;;;;;;;;;;;;AEbD;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;;;AAO3C,MAAM,YAAY;IAEvB,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;wEALU,YAAY;4FAAZ,YAAY;QCPzB,yEACI;QAAA,uEAAiD;QAAA,qEAAU;QAAA,4DAAI;QAE/D,wEACE;QAAA,uEAA+C;QAAA,kEAAO;QAAA,4DAAI;QAC1D,uEAAmD;QAAA,qEAAU;QAAA,4DAAI;QACjE,uEAAkD;QAAA,oEAAS;QAAA,4DAAI;QACjE,4DAAK;QACP,4DAAM;;QAPoB,0DAAwB;QAAxB,6IAAwB;QAG1B,0DAA0B;QAA1B,6IAA0B;QAC1B,0DAA8B;QAA9B,6IAA8B;QAC9B,0DAA6B;QAA7B,6IAA6B;;6FDC1C,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,SAAS;gBACnB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,qBAAqB,CAAC;aACnC;;;;;;;;;;;;;;AEND;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;IACjB,OAAO,EAAE,yBAAyB;CACnC,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;AChBnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Category } from '../_models/Category';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class CategoryService{\r\n    private baseUrl: string = environment.baseUrl + 'api/';\r\n\r\n    constructor(private http: HttpClient){}\r\n\r\n    public addCategory(category: Category){\r\n        return this.http.post(this.baseUrl+'categories', category);\r\n    }\r\n\r\n    public updateCategory(id: number, category:Category){\r\n        return this.http.put(this.baseUrl+'categories/'+id,category);\r\n    }\r\n\r\n    public deleteCategory(id:number){\r\n        return this.http.delete(this.baseUrl+'categories/'+id);\r\n    }\r\n\r\n    public getCategories(): Observable<Category[]>{\r\n        return this.http.get<Category[]>(this.baseUrl+'categories');\r\n    }\r\n\r\n    public getCategoryById(id): Observable<Category>{\r\n        return this.http.get<Category>(this.baseUrl + 'categories/' + id);\r\n    }\r\n\r\n    public searchCategories(name: string){\r\n        return this.http.get<Category[]>(`${this.baseUrl}categories/search/${name}`);\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\n\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ConfirmationDialogComponent } from '../confirmation-dialog/confirmation-dialog.component';\r\n\r\n@Injectable()\r\n\r\nexport class ConfirmationDialogService {\r\n    constructor(private modalService: NgbModal) {}\r\n\r\n    public confirm(\r\n        title: string, \r\n        message: string,\r\n        btnOkText: string = 'U redu',\r\n        btnCancelText: string = 'Odustani',\r\n        dialogSize: 'sm'|'lg' = 'sm'): Promise<boolean> {\r\n        const modalRef = this.modalService.open(ConfirmationDialogComponent, {size: dialogSize});\r\n        modalRef.componentInstance.title = title;\r\n        modalRef.componentInstance.message = message;\r\n        modalRef.componentInstance.btnOkText = btnOkText;\r\n        modalRef.componentInstance.btnCancelText = btnCancelText;\r\n\r\n        return modalRef.result;\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Director } from '../_models/Director';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class DirectorService{\r\n    private baseUrl: string = environment.baseUrl + 'api/';\r\n\r\n    constructor(private http: HttpClient){}\r\n\r\n    public addDirector(director: Director){\r\n        return this.http.post(this.baseUrl+'directors', director);\r\n    }\r\n\r\n    public updateDirector(id: number, director:Director){\r\n        return this.http.put(this.baseUrl+'directors/'+id,director);\r\n    }\r\n\r\n    public deleteDirector(id:number){\r\n        return this.http.delete(this.baseUrl+'directors/'+id);\r\n    }\r\n\r\n    public getDirectors(): Observable<Director[]>{\r\n        return this.http.get<Director[]>(this.baseUrl+'directors');\r\n    }\r\n\r\n    public getDirectorById(id): Observable<Director>{\r\n        return this.http.get<Director>(this.baseUrl + 'directors/' + id);\r\n    }\r\n\r\n    public searchDirectors(name: string){\r\n        return this.http.get<Director[]>(`${this.baseUrl}directors/search/${name}`);\r\n    }\r\n}","\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Movie } from '../_models/Movie';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class MoviesService {\r\n    private baseUrl: string = environment.baseUrl + 'api/';\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    public addMovie(movie: Movie) {\r\n        return this.http.post(this.baseUrl + 'movies', movie);\r\n    }\r\n\r\n    public updateMovie(id: number, movie: Movie) {\r\n        return this.http.put(this.baseUrl + 'movies/' + id, movie);\r\n    }\r\n\r\n    public getMovies(): Observable<Movie[]> {\r\n        return this.http.get<Movie[]>(this.baseUrl + 'movies');\r\n    }\r\n\r\n    public deleteMovie(id: number) {\r\n        return this.http.delete(this.baseUrl + 'movies/' + id);\r\n    }\r\n\r\n    public getMovieById(id): Observable<Movie> {\r\n        return this.http.get<Movie>(this.baseUrl + 'movies/' + id);\r\n    }\r\n\r\n    public searchMoviesWithCategoryAndDirector(searchedValue: string): Observable<Movie[]> {\r\n        return this.http.get<Movie[]>(`${this.baseUrl}movies/search-movies-with-category-and-director/${searchedValue}`);\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { MovieListComponent } from './movies/movie-list/movie-list.component';\nimport { MovieComponent } from './movies/movie/movie.component';\nimport { CategoryListComponent } from './categories/category-list/category-list.component';\nimport { CategoryComponent } from './categories/category/category.component';\nimport { DirectorListComponent } from './directors/director-list/director-list.component';\nimport { DirectorComponent } from './directors/director/director.component';\n\n\nconst routes: Routes = [\n  { path: 'home', component: HomeComponent },\n  { path: 'movies', component: MovieListComponent },\n  { path: 'movie', component: MovieComponent },\n  { path: 'movie/:id', component: MovieComponent },\n  { path: 'categories', component: CategoryListComponent },\n  { path: 'category', component: CategoryComponent },\n  { path: 'category/:id', component: CategoryComponent },\n  { path: 'directors', component: DirectorListComponent },\n  { path: 'director', component: DirectorComponent },\n  { path: 'director/:id', component: DirectorComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'MoviesApp-Frontend';\n}\n","<app-nav></app-nav>\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { ConfirmationDialogComponent } from './confirmation-dialog/confirmation-dialog.component';\nimport { CategoryComponent } from './categories/category/category.component';\nimport { CategoryListComponent } from './categories/category-list/category-list.component';\nimport { DirectorComponent } from './directors/director/director.component';\nimport { DirectorListComponent } from './directors/director-list/director-list.component';\nimport { MovieComponent } from './movies/movie/movie.component';\nimport { MovieListComponent } from './movies/movie-list/movie-list.component';\nimport { NavComponent } from './nav/nav.component';\nimport { HomeComponent } from './home/home.component';\nimport { MoviesService } from './_services/movies.service';\nimport { CategoryService } from './_services/category.service';\nimport { ConfirmationDialogService } from './_services/confirmation-dialog.service';\nimport { DirectorService } from './_services/director.service';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ConfirmationDialogComponent,\n    CategoryComponent,\n    CategoryListComponent,\n    DirectorComponent,\n    DirectorListComponent,\n    MovieComponent,\n    MovieListComponent,\n    NavComponent,\n    HomeComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule,\n    AppRoutingModule,\n    NgbModule\n  ],\n  providers: [\n    MoviesService,\n    CategoryService,\n    DirectorService,\n    ConfirmationDialogService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { CategoryService } from 'src/app/_services/category.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { ConfirmationDialogService } from 'src/app/_services/confirmation-dialog.service';\nimport { Subject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-category-list',\n  templateUrl: './category-list.component.html',\n  styleUrls: ['./category-list.component.css']\n})\n\nexport class CategoryListComponent implements OnInit{\n  public categories: any;\n  public searchTerm: string;\n  public searchValueChanged: Subject<string> = new Subject<string>();\n\n  constructor(private router: Router, private service: CategoryService, private toastr: ToastrService, \n                private confirmationDialogService: ConfirmationDialogService) { }\n\n  ngOnInit(): void {\n      this.getCategories();\n      this.searchValueChanged.pipe(debounceTime(1000))\n      .subscribe(() => {\n        this.search();\n      });\n    }\n  \n  private getCategories(){\n    this.service.getCategories().subscribe(categories => {\n      this.categories = categories;\n    })\n  }\n\n  private search() {\n    if (this.searchTerm !== '') {\n      this.service.searchCategories(this.searchTerm).subscribe(category => {\n        this.categories = category;\n      }, error => {\n        this.categories = [];\n      });\n    } else {\n      this.service.getCategories().subscribe(categories => this.categories = categories);\n    }\n  }\n\n  public addCategory() {\n    this.router.navigate(['/category']);\n  }\n\n  public updateCategory(categoryId: number) {\n    this.router.navigate(['/category/' + categoryId]);\n  }\n  \n  public deleteCategory(categoryId: number){\n    this.confirmationDialogService.confirm('Oprez', 'Jeste li sigurni da želite obrisati ovu kategoriju??')\n      .then(() =>\n        this.service.deleteCategory(categoryId).subscribe(() => {\n          this.toastr.success('Kategorija je obrisana.');\n          this.getCategories();\n        },\n          error => {\n            this.toastr.error('Došlo je do pogreške pri brisanju kategorije.');\n          }))\n      .catch(() => '');\n  }\n\n  public searchCategories() {\n    this.searchValueChanged.next();\n  }  \n}","<div class=\"jumbtron\">\n    <h1 class=\"display-4 text-center\">Kategorije</h1>\n</div>\n\n<div class=\"col-md-12\">\n    <button type=\"button\" class=\"btn btn-success\" (click)=\"addCategory()\">Nova kategorija</button>\n    <hr/>\n\n    <div class=\"form-group\">\n        <label for=\"Search\">Pretraživanje</label>\n        <div class=\"input-group\">\n            <div class=\"input-group-prepend\">\n                <div class=\"input-group-text bg-white\">\n                    <i class=\"fas fas-search\"></i>\n                </div>\n            </div>\n            <input type=\"text\" [(ngModel)]=\"searchTerm\" (ngModelChange)=\"searchCategories()\"/>\n        </div>\n    </div>\n\n    <table class=\"table-condensed table-bordered table-striped\">\n        <thead>\n            <tr>\n                <th class=\"col-md-7\">\n                    Kategorija\n                </th>\n                <th>\n                    Opcije\n                </th>\n            </tr>\n        </thead>\n            <tbody>\n                <tr *ngFor=\"let category of categories\">\n                    <td>\n                        {{category.name}}\n                    </td>\n                    <td class=\"action-button-column\">\n                        <a title=\"Uredi\" (click)=\"updateCategory(category.id)\">\n                            <i class=\"fas fa-edit\"></i>\n                        </a>\n                        <a title=\"Obriši\" (click)=\"deleteCategory(category.id)\" style=\"margin-left: 12px\">\n                            <i class=\"fas fa-trash-alt\"></i>\n                        </a>\n                    </td>\n                </tr>\n            </tbody>\n    </table>    \n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { NgForm } from '@angular/forms';\nimport { Category } from 'src/app/_models/Category';\nimport { ToastrService } from 'ngx-toastr';\nimport { CategoryService } from 'src/app/_services/category.service';\n\n@Component({\n  selector: 'app-category',\n  templateUrl: './category.component.html',\n  styleUrls: ['./category.component.css']\n})\nexport class CategoryComponent implements OnInit {\n  public formData: Category;\n\n  constructor(public service: CategoryService,\n              private router: Router,\n              private route: ActivatedRoute,\n              private toastr: ToastrService) { }\n\n  ngOnInit() {\n    this.resetForm();\n\n    let id;\n    this.route.params.subscribe(params => {\n      id = params['id'];\n    });\n\n    if (id != null) {\n      this.service.getCategoryById(id).subscribe(category => {\n        this.formData = category;\n      }, error => {\n        this.toastr.error('Došlo je do pogreške pri dohvaćanju kategorije.');\n      });\n    } else {\n      this.resetForm();\n    }\n  }\n\n private resetForm(form?: NgForm) {\n    if (form != null) {\n      form.form.reset();\n    }\n\n    this.formData = {\n      id: 0,\n      name: ''\n    };\n  }\n\n  public onSubmit(form: NgForm) {\n    if (form.value.id === 0) {\n      this.insertCategory(form);\n    } else {\n      this.updateCategory(form);\n    }\n  }\n\n  public insertCategory(form: NgForm) {\n    this.service.addCategory(form.form.value).subscribe(() => {\n      this.toastr.success('Uspješno ste dodali kategoriju.');\n      this.resetForm(form);\n      this.router.navigate(['/categories']);\n    }, () => {\n      this.toastr.error('Došlo je do pogreške pri dodavanju kategorije.');\n    });\n  }\n\n  public updateCategory(form: NgForm) {\n    this.service.updateCategory(form.form.value.id, form.form.value).subscribe(() => {\n      this.toastr.success('Uspješno ste ažurirali kategoriju.');\n      this.resetForm(form);\n      this.router.navigate(['/categories']);\n    }, () => {\n      this.toastr.error('Došlo je do pogreške pri ažuriranju kategorije.');\n    });\n  }\n\n  public cancel() {\n    this.router.navigate(['/categories']);\n  }\n}\n","<div class=\"jumbtron\">\n    <form #form=\"ngForm\" (submit)=\"onSubmit(form)\" autocomplete=\"off\" class=\"col-md-5 form\">\n      <h2 class=\"text-center text-primary\">Kategorija</h2>\n      <input type=\"hidden\" name=\"id\" #id=\"ngModel\" [(ngModel)]=\"formData.id\">\n      <div class=\"form-group\">\n        <input name=\"name\" #name=\"ngModel\" [(ngModel)]=\"formData.name\" class=\"form-control\" required\n          [ngClass]=\"{'is-invalid': form.controls['name']?.invalid && form.controls['name']?.touched}\"\n          placeholder=\"Kategorija\">\n        <div class=\"invalid-feedback\" *ngIf=\"name.invalid && name.touched\">Molimo, unesite naziv kategorije.</div>\n      </div>\n      <div class=\"form-group text-center\">\n        <button class=\"btn btn-success mr-2\" [disabled]=\"form.invalid\" type=\"submit\">Spremi</button>\n        <button class=\"btn btn-default\" type=\"button\" (click)=\"cancel()\">Odustani</button>\n      </div>\n    </form>\n  </div>","import { Component, Input, OnInit } from '@angular/core';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'app-confirmation-dialog',\n  templateUrl: './confirmation-dialog.component.html',\n  styleUrls: ['./confirmation-dialog.component.css']\n})\nexport class ConfirmationDialogComponent implements OnInit {\n\n  @Input() title: string;\n  @Input() message: string;\n  @Input() btnOkText: string;\n  @Input() btnCancelText: string;\n\n  constructor(private activeModal: NgbActiveModal) { }\n\n  ngOnInit() {\n  }\n\n  public decline() {\n    this.activeModal.close(false);\n  }\n\n  public accept() {\n    this.activeModal.close(true);\n  }\n\n  public dismiss() {\n    this.activeModal.dismiss();\n  }\n}\n\n","<div class=\"modal-header\">\n    <h4 class=\"modal-title\" id=\"modal-title\">{{ title }}</h4>\n    <button type=\"button\" class=\"close\" aria-describedby=\"modal-title\" (click)=\"dismiss()\">\n        <span aria-hidden=\"true\">&times;</span>\n    </button>\n</div>\n<div class=\"modal-body\">\n    {{ message }}\n</div>\n<div class=\"modal-footer\">\n    <button type=\"button\" class=\"btn btn-info\" (click)=\"dismiss()\">{{ btnCancelText }}</button>\n    <button type=\"button\" class=\"btn btn-danger\" (click)=\"accept()\"> {{ btnOkText }}</button>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { DirectorService } from 'src/app/_services/director.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { ConfirmationDialogService } from 'src/app/_services/confirmation-dialog.service';\nimport { Subject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-director-list',\n  templateUrl: './director-list.component.html',\n  styleUrls: ['./director-list.component.css']\n})\n\nexport class DirectorListComponent implements OnInit{\n  public directors: any;\n  public searchTerm: string;\n  public searchValueChanged: Subject<string> = new Subject<string>();\n\n  constructor(private router: Router, private service: DirectorService, private toastr: ToastrService, \n                private confirmationDialogService: ConfirmationDialogService) { }\n\n  ngOnInit(): void {\n      this.getDirectors();\n      this.searchValueChanged.pipe(debounceTime(1000))\n      .subscribe(() => {\n        this.search();\n      });\n    }\n  \n  private getDirectors(){\n    this.service.getDirectors().subscribe(directors => {\n      this.directors = directors;\n    })\n  }\n\n  private search() {\n    if (this.searchTerm !== '') {\n      this.service.searchDirectors(this.searchTerm).subscribe(director => {\n        this.directors = director;\n      }, error => {\n        this.directors = [];\n      });\n    } else {\n      this.service.getDirectors().subscribe(directors => this.directors = directors);\n    }\n  }\n\n  public addDirector() {\n    this.router.navigate(['/director']);\n  }\n\n  public updateDirector(directorId: number) {\n    this.router.navigate(['/director/' + directorId]);\n  }\n  \n  public deleteDirector(directorId: number){\n    this.confirmationDialogService.confirm('Oprez', 'Jeste li sigurni da želite obrisati ovog redatelja?')\n      .then(() =>\n        this.service.deleteDirector(directorId).subscribe(() => {\n          this.toastr.success('Redatelj je obrisan.');\n          this.getDirectors();\n        },\n          error => {\n            this.toastr.error('Došlo je do pogreške pri brisanju redatelja.');\n          }))\n      .catch(() => '');\n  }\n\n  public searchDirectors() {\n    this.searchValueChanged.next();\n  }  \n}","<div class=\"jumbtron\">\n    <h1 class=\"display-4 text-center\">Redatelji</h1>\n</div>\n\n<div class=\"col-md-12\">\n    <button type=\"button\" class=\"btn btn-success\" (click)=\"addDirector()\">Novi redatelj</button>\n    <hr/>\n\n    <div class=\"form-group\">\n        <label for=\"Search\">Pretraživanje</label>\n        <div class=\"input-group\">\n            <div class=\"input-group-prepend\">\n                <div class=\"input-group-text bg-white\">\n                    <i class=\"fas fas-search\"></i>\n                </div>\n            </div>\n            <input type=\"text\" [(ngModel)]=\"searchTerm\" (ngModelChange)=\"searchDirectors()\"/>\n        </div>\n    </div>\n\n    <table class=\"table-condensed table-bordered table-striped\">\n        <thead>\n            <tr>\n                <th class=\"col-md-7\">\n                    Redatelj\n                </th>\n                <th>\n                    Opcije\n                </th>\n            </tr>\n        </thead>\n            <tbody>\n                <tr *ngFor=\"let director of directors\">\n                    <td>\n                        {{director.name}}\n                    </td>\n                    <td class=\"action-button-column\">\n                        <a title=\"Uredi\" (click)=\"updateDirector(director.id)\">\n                            <i class=\"fas fa-edit\"></i>\n                        </a>\n                        <a title=\"Obriši\" (click)=\"deleteDirector(director.id)\" style=\"margin-left: 12px\">\n                            <i class=\"fas fa-trash-alt\"></i>\n                        </a>\n                    </td>\n                </tr>\n            </tbody>\n    </table>    \n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { NgForm } from '@angular/forms';\nimport { Director } from 'src/app/_models/Director';\nimport { ToastrService } from 'ngx-toastr';\nimport { DirectorService } from 'src/app/_services/director.service';\n\n@Component({\n  selector: 'app-director',\n  templateUrl: './director.component.html',\n  styleUrls: ['./director.component.css']\n})\nexport class DirectorComponent implements OnInit {\n  public formData: Director;\n\n  constructor(public service: DirectorService,\n              private router: Router,\n              private route: ActivatedRoute,\n              private toastr: ToastrService) { }\n\n  ngOnInit() {\n    this.resetForm();\n\n    let id;\n    this.route.params.subscribe(params => {\n      id = params['id'];\n    });\n\n    if (id != null) {\n      this.service.getDirectorById(id).subscribe(director => {\n        this.formData = director;\n      }, error => {\n        this.toastr.error('Došlo je do pogreške pri dohvaćanju redatelja.');\n      });\n    } else {\n      this.resetForm();\n    }\n  }\n\n private resetForm(form?: NgForm) {\n    if (form != null) {\n      form.form.reset();\n    }\n\n    this.formData = {\n      id: 0,\n      name: '',\n      lastname: ''\n    };\n  }\n\n  public onSubmit(form: NgForm) {\n    if (form.value.id === 0) {\n      this.insertDirector(form);\n    } else {\n      this.updateDirector(form);\n    }\n  }\n\n  public insertDirector(form: NgForm) {\n    this.service.addDirector(form.form.value).subscribe(() => {\n      this.toastr.success('Uspješno ste dodali redatelja.');\n      this.resetForm(form);\n      this.router.navigate(['/directors']);\n    }, () => {\n      this.toastr.error('Došlo je do pogreške pri dodavanju redatelja.');\n    });\n  }\n\n  public updateDirector(form: NgForm) {\n    this.service.updateDirector(form.form.value.id, form.form.value).subscribe(() => {\n      this.toastr.success('Uspješno ste ažurirali redatelja');\n      this.resetForm(form);\n      this.router.navigate(['/directors']);\n    }, () => {\n      this.toastr.error('Došlo je do pogreške pri ažuriranju redatelja.');\n    });\n  }\n\n  public cancel() {\n    this.router.navigate(['/directors']);\n  }\n}\n","<div class=\"jumbtron\">\n    <form #form=\"ngForm\" (submit)=\"onSubmit(form)\" autocomplete=\"off\" class=\"col-md-5 form\">\n      <h2 class=\"text-center text-primary\">Redatelj</h2>\n      <input type=\"hidden\" name=\"id\" #id=\"ngModel\" [(ngModel)]=\"formData.id\">\n      <div class=\"form-group\">\n        <input name=\"name\" #name=\"ngModel\" [(ngModel)]=\"formData.name\" class=\"form-control\" required\n          [ngClass]=\"{'is-invalid': form.controls['name']?.invalid && form.controls['name']?.touched}\"\n          placeholder=\"Ime redatelja\">\n        <div class=\"invalid-feedback\" *ngIf=\"name.invalid && name.touched\">Molimo, unesite naziv kategorije.</div>\n      </div>\n      <div class=\"form-group\">\n        <input name=\"lastname\" #name=\"ngModel\" [(ngModel)]=\"formData.lastname\" class=\"form-control\" required\n          [ngClass]=\"{'is-invalid': form.controls['lastname']?.invalid && form.controls['lastname']?.touched}\"\n          placeholder=\"Prezime redatelja\">\n        <div class=\"invalid-feedback\" *ngIf=\"name.invalid && name.touched\">Molimo, unesite naziv kategorije.</div>\n      </div>\n      <div class=\"form-group text-center\">\n        <button class=\"btn btn-success mr-2\" [disabled]=\"form.invalid\" type=\"submit\">Spremi</button>\n        <button class=\"btn btn-default\" type=\"button\" (click)=\"cancel()\">Odustani</button>\n      </div>\n    </form>\n  </div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"title-home container mt-5 text-center\">\n    <h1>Dobrodošli u Movies!</h1>\n    <p class=\"lead\">Platforma za pretraživanje filmova</p>\n    <div class=\"text-center\">\n        <button class=\"btn btn-info btn-lg\" [routerLink]=\"['/movies']\">Pogledajte filmove</button>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { MoviesService } from 'src/app/_services/movies.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { ConfirmationDialogService } from 'src/app/_services/confirmation-dialog.service';\nimport { Subject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-movie-list',\n  templateUrl: './movie-list.component.html',\n  styleUrls: ['./movie-list.component.css']\n})\nexport class MovieListComponent implements OnInit {\n  public movies: any;\n  public listComplet: any;\n  public searchTerm: string;\n  public searchValueChanged: Subject<string> = new Subject<string>();\n\n  constructor(private router: Router,\n              private service: MoviesService,\n              private toastr: ToastrService,\n              private confirmationDialogService: ConfirmationDialogService) { }\n\n  ngOnInit() {\n    this.getValues();\n\n    this.searchValueChanged.pipe(debounceTime(1000))\n    .subscribe(() => {\n      this.search();\n    });\n  }\n\n  private getValues() {\n\n    this.service.getMovies().subscribe(movies => {\n      this.movies = movies;\n      this.listComplet = movies;\n    });\n  }\n\n  public addMovie() {\n    this.router.navigate(['/movie']);\n  }\n\n  public updateMovie(movieId: number) {\n    this.router.navigate(['/movie/' + movieId]);\n  }\n\n  public deleteMovie(movieId: number) {\n    this.confirmationDialogService.confirm('Oprez', 'Jeste li sigurni da želite obrisati ovaj film?')\n      .then(() =>\n        this.service.deleteMovie(movieId).subscribe(() => {\n          this.toastr.success('Film je izbrisan.');\n          this.getValues();\n        },\n          err => {\n            this.toastr.error('Došlo je do pogreške pri brisanju filma.');\n          }))\n      .catch(() => '');\n  }\n\n  public searchMovies() {\n    this.searchValueChanged.next();\n  }\n\n  private search() {\n    if (this.searchTerm !== '') {\n      this.service.searchMoviesWithCategoryAndDirector(this.searchTerm).subscribe(movie => {\n        this.movies = movie;\n      }, error => {\n        this.movies = [];\n      });\n    } else {\n      this.service.getMovies().subscribe(movies => this.movies = movies);\n    }\n  }\n}\n","<div class=\"jumbtron\">\n    <h1 class=\"display-4 text-center\">Filmovi</h1>\n  </div>\n  \n  <div class=\"col-md-12\">\n    <button type=\"button\" class=\"btn btn-success\" (click)=\"addMovie()\">Novi film</button>\n    <hr/>\n  \n    <div class=\"form-group\">\n        <label for=\"Search\">Pretraživanje</label>\n        <div class=\"input-group\">\n          <div class=\"input-group-prepend\">\n            <div class=\"input-group-text bg-white\">\n                <i class=\"fas fa-search\"></i>\n            </div>\n          </div>\n          <input type=\"text\" [(ngModel)]=\"searchTerm\" (ngModelChange)=\"searchMovies()\"/>\n        </div>\n      </div>\n      \n    <table class=\"table table-condensed table-bordered table-striped table-hover\">\n        <thead>\n            <tr>\n            <th>Naziv filma</th>\n            <th>Opis</th>\n            <th>Kategorija</th>\n            <th>Redatelj</th>\n            <th>Godina</th>\n            <th>Opcije</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let movie of movies\">\n            <td>{{movie.name}}</td>\n            <td>{{movie.description.length > 25 ? (movie.description | slice : 0:25) + '...' : movie.description}}</td>\n            <td>{{movie.categoryName}}</td>\n            <td>{{movie.directorName}}, \" \", {{movie.directorLastname}}</td>\n            <td>{{movie.year}}</td>\n            <td class=\"action-button-column\">\n                <a title=\"Uredi\" (click)=\"updateMovie(movie.id)\"><i class=\"fas fa-edit\"></i> </a>\n                <a title=\"Obriši\" (click)=\"deleteMovie(movie.id)\" style=\"margin-left: 12px;\"><i class=\"fas fa-trash-alt\"></i> </a>\n            </td>\n          </tr>\n        </tbody>\n  \n    </table>\n  </div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { NgForm } from '@angular/forms';\nimport { Movie } from 'src/app/_models/Movie';\nimport { MoviesService } from 'src/app/_services/movies.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { CategoryService } from 'src/app/_services/category.service';\nimport { DirectorService } from 'src/app/_services/director.service';\n\n@Component({\n  selector: 'app-movie',\n  templateUrl: './movie.component.html',\n  styleUrls: ['./movie.component.css']\n})\nexport class MovieComponent implements OnInit {\n  public formData: Movie;\n  public categories: any;\n  public directors: any;\n\n  constructor(public service: MoviesService,\n              private categoryService: CategoryService,\n              private directorService: DirectorService,\n              private router: Router,\n              private route: ActivatedRoute,\n              private toastr: ToastrService) { }\n\n  ngOnInit() {\n    this.resetForm();\n    let id;\n    this.route.params.subscribe(params => {\n      id = params['id'];\n    });\n\n    if (id != null) {\n      this.service.getMovieById(id).subscribe(movie => {\n        this.formData = movie;\n        }, err => {\n        this.toastr.error('Došlo je do pogreške pri dohvaćanju podataka.');\n      });\n    } else {\n      this.resetForm();\n    }\n\n    this.categoryService.getCategories().subscribe(categories => {\n      this.categories = categories;\n    }, err => {\n      this.toastr.error('Došlo je do pogreške pri dohvaćanju podataka.');\n    });\n\n    this.directorService.getDirectors().subscribe(directors => {\n      this.directors = directors;\n    }, err => {\n      this.toastr.error('Došlo je do pogreške pri dohvaćanju podataka.');\n    });\n  }\n\n  public onSubmit(form: NgForm) {\n    form.value.categoryId = Number(form.value.categoryId);\n    form.value.directorId = Number(form.value.directorId);\n    if (form.value.id === 0) {\n      this.insertRecord(form);\n    } else {\n      this.updateRecord(form);\n    }\n  }\n\n  public insertRecord(form: NgForm) {\n    this.service.addMovie(form.form.value).subscribe(() => {\n      this.toastr.success('Uspješno ste dodali film.');\n      this.resetForm(form);\n      this.router.navigate(['/movies']);\n    }, () => {\n      this.toastr.error('Došlo je do pogreške pri dodavanju podataka.');\n    });\n  }\n\n  public updateRecord(form: NgForm) {\n    this.service.updateMovie(form.form.value.id, form.form.value).subscribe(() => {\n      this.toastr.success('Uspješno ste ažurirali film.');\n      this.resetForm(form);\n      this.router.navigate(['/movies']);\n    }, () => {\n      this.toastr.error('Došlo je do pogreške pri ažuriranju podataka.');\n    });\n  }\n\n  public cancel() {\n    this.router.navigate(['/movies']);\n  }\n\n  private resetForm(form?: NgForm) {\n    if (form != null) {\n      form.form.reset();\n    }\n\n    this.formData = {\n      id: 0,\n      name: '',\n      description: '',\n      categoryId: null,\n      directorId: null,\n      year: null\n    };\n  }\n}","<div class=\"jumbtron\">\n    <form #form=\"ngForm\" (submit)=\"onSubmit(form)\" autocomplete=\"off\" class=\"col-md-5 form\">\n      <h2 class=\"text-center text-primary\">Film</h2>\n      <input type=\"hidden\" name=\"id\" #id=\"ngModel\" [(ngModel)]=\"formData.id\">\n\n      <div class=\"form-group\">\n        <input name=\"name\" #name=\"ngModel\" [(ngModel)]=\"formData.name\" class=\"form-control\" required\n          [ngClass]=\"{'is-invalid': form.controls['name']?.invalid && form.controls['name']?.touched}\" placeholder=\"Naziv\">\n        <div class=\"invalid-feedback\" *ngIf=\"name.invalid && name.touched\">Molimo, unesite naziv filma.</div>\n      </div>\n      <div class=\"form-group\">\n        <textarea name=\"description\" #name=\"ngModel\" [(ngModel)]=\"formData.description\" class=\"form-control\"\n          placeholder=\"Opis\"\n          [ngClass]=\"\"\n          required rows=\"4\"></textarea>\n        <div class=\"invalid-feedback\" *ngIf=\"\">Molimo, unesite opis filma.\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <select class=\"form-control\" name=\"categoryId\" #categoryId [(ngModel)]=\"formData.categoryId\" required>\n          <option value=\"null\" disabled selected hidden>Kategorija</option>\n          <option *ngFor=\"let category of categories\" value=\"{{category.id}}\">\n            {{category.name}}\n          </option>\n        </select>\n        <div class=\"invalid-feedback\" *ngIf=\"categoryId.invalid && categoryId.touched\">Molimo, odaberite kategoriju.</div>\n      </div>\n      <div class=\"form-group\">\n        <select class=\"form-control\" name=\"directorId\" #directorId [(ngModel)]=\"formData.directorId\" required>\n          <option value=\"null\" disabled selected hidden>Redetelj</option>\n          <option *ngFor=\"let director of directors\" value=\"{{director.id}}\">\n            {{director.name}}\" \"{{director.lastname}}\n          </option>\n        </select>\n        <div class=\"invalid-feedback\" *ngIf=\"directorId.invalid && directorId.touched\">Molimo, odaberite redatelja</div>\n      </div>\n      <div class=\"form-group\">\n        <input name=\"year\" #name=\"ngModel\" [(ngModel)]=\"formData.year\" class=\"form-control\" required\n          [ngClass]=\"\" placeholder=\"Godina\">\n        <div class=\"invalid-feedback\" *ngIf=\"\">Molimo, unesite godinu objavljivanja filma.</div>\n      </div>\n      \n      <div class=\"form-group text-center\">\n        <button class=\"btn btn-success mr-2\" [disabled]=\"form.invalid\" type=\"submit\">Spremi</button>\n        <button class=\"btn btn-default\" type=\"button\" (click)=\"cancel()\">Odustani</button>\n      </div>\n  \n    </form>\n  </div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<nav class=\"navbar navbar-expand-md navbar-dark fixed-top bg-primary\">\n    <a class=\"navbar-brand\" [routerLink]=\"['/home']\">The Movies</a>\n  \n    <ul class=\"navbar-nav mr-auto\">\n      <a class=\"nav-link\" [routerLink]=\"['/movies']\">Filmovi</a>\n      <a class=\"nav-link\" [routerLink]=\"['/categories']\">Kategorije</a>\n      <a class=\"nav-link\" [routerLink]=\"['/directors']\">Redatelji</a>\n    </ul>\n  </nav>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  baseUrl: 'https://localhost:5001/'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}