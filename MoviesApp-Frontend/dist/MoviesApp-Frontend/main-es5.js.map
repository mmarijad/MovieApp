{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/_services/category.service.ts","webpack:///src/app/_services/confirmation-dialog.service.ts","webpack:///src/app/_services/director.service.ts","webpack:///src/app/_services/movies.service.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/categories/category-list/category-list.component.ts","webpack:///src/app/categories/category-list/category-list.component.html","webpack:///src/app/categories/category/category.component.ts","webpack:///src/app/categories/category/category.component.html","webpack:///src/app/confirmation-dialog/confirmation-dialog.component.ts","webpack:///src/app/confirmation-dialog/confirmation-dialog.component.html","webpack:///src/app/directors/director-list/director-list.component.ts","webpack:///src/app/directors/director-list/director-list.component.html","webpack:///src/app/directors/director/director.component.ts","webpack:///src/app/directors/director/director.component.html","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/movies/movie-list/movie-list.component.ts","webpack:///src/app/movies/movie-list/movie-list.component.html","webpack:///src/app/movies/movie/movie.component.ts","webpack:///src/app/movies/movie/movie.component.html","webpack:///src/app/nav/nav.component.ts","webpack:///src/app/nav/nav.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","CategoryService","http","baseUrl","category","post","put","get","name","providedIn","ConfirmationDialogService","modalService","title","message","btnOkText","btnCancelText","dialogSize","modalRef","open","size","componentInstance","result","DirectorService","director","MoviesService","movie","searchedValue","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","CategoryListComponent","router","service","toastr","confirmationDialogService","searchValueChanged","getCategories","pipe","subscribe","search","categories","searchTerm","searchCategories","error","navigate","categoryId","confirm","deleteCategory","success","next","addCategory","CategoryComponent","route","resetForm","params","getCategoryById","formData","form","reset","value","insertCategory","updateCategory","onSubmit","cancel","ConfirmationDialogComponent","activeModal","close","dismiss","accept","DirectorListComponent","getDirectors","directors","searchDirectors","directorId","deleteDirector","addDirector","DirectorComponent","getDirectorById","lastname","insertDirector","updateDirector","HomeComponent","MovieListComponent","getValues","getMovies","movies","listComplet","movieId","deleteMovie","err","searchMoviesWithCategoryAndDirector","addMovie","searchMovies","MovieComponent","categoryService","directorService","getMovieById","Number","insertRecord","updateRecord","updateMovie","description","year","NavComponent","environment","production","bootstrapModule","console"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Category } from '../_models/Category';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class CategoryService{\r\n    private baseUrl: string = environment.baseUrl + 'api/';\r\n\r\n    constructor(private http: HttpClient){}\r\n\r\n    public addCategory(category: Category){\r\n        return this.http.post(this.baseUrl+'categories', category);\r\n    }\r\n\r\n    public updateCategory(id: number, category:Category){\r\n        return this.http.put(this.baseUrl+'categories/'+id,category);\r\n    }\r\n\r\n    public deleteCategory(id:number){\r\n        return this.http.delete(this.baseUrl+'categories/'+id);\r\n    }\r\n\r\n    public getCategories(): Observable<Category[]>{\r\n        return this.http.get<Category[]>(this.baseUrl+'categories');\r\n    }\r\n\r\n    public getCategoryById(id): Observable<Category>{\r\n        return this.http.get<Category>(this.baseUrl + 'categories/' + id);\r\n    }\r\n\r\n    public searchCategories(name: string){\r\n        return this.http.get<Category[]>(`${this.baseUrl}categories/search/${name}`);\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\n\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ConfirmationDialogComponent } from '../confirmation-dialog/confirmation-dialog.component';\r\n\r\n@Injectable()\r\n\r\nexport class ConfirmationDialogService {\r\n    constructor(private modalService: NgbModal) {}\r\n\r\n    public confirm(\r\n        title: string, \r\n        message: string,\r\n        btnOkText: string = 'U redu',\r\n        btnCancelText: string = 'Odustani',\r\n        dialogSize: 'sm'|'lg' = 'sm'): Promise<boolean> {\r\n        const modalRef = this.modalService.open(ConfirmationDialogComponent, {size: dialogSize});\r\n        modalRef.componentInstance.title = title;\r\n        modalRef.componentInstance.message = message;\r\n        modalRef.componentInstance.btnOkText = btnOkText;\r\n        modalRef.componentInstance.btnCancelText = btnCancelText;\r\n\r\n        return modalRef.result;\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Director } from '../_models/Director';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class DirectorService{\r\n    private baseUrl: string = environment.baseUrl + 'api/';\r\n\r\n    constructor(private http: HttpClient){}\r\n\r\n    public addDirector(director: Director){\r\n        return this.http.post(this.baseUrl+'directors', director);\r\n    }\r\n\r\n    public updateDirector(id: number, director:Director){\r\n        return this.http.put(this.baseUrl+'directors/'+id,director);\r\n    }\r\n\r\n    public deleteDirector(id:number){\r\n        return this.http.delete(this.baseUrl+'directors/'+id);\r\n    }\r\n\r\n    public getDirectors(): Observable<Director[]>{\r\n        return this.http.get<Director[]>(this.baseUrl+'directors');\r\n    }\r\n\r\n    public getDirectorById(id): Observable<Director>{\r\n        return this.http.get<Director>(this.baseUrl + 'directors/' + id);\r\n    }\r\n\r\n    public searchDirectors(name: string){\r\n        return this.http.get<Director[]>(`${this.baseUrl}directors/search/${name}`);\r\n    }\r\n}","\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Movie } from '../_models/Movie';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class MoviesService {\r\n    private baseUrl: string = environment.baseUrl + 'api/';\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    public addMovie(movie: Movie) {\r\n        return this.http.post(this.baseUrl + 'movies', movie);\r\n    }\r\n\r\n    public updateMovie(id: number, movie: Movie) {\r\n        return this.http.put(this.baseUrl + 'movies/' + id, movie);\r\n    }\r\n\r\n    public getMovies(): Observable<Movie[]> {\r\n        return this.http.get<Movie[]>(this.baseUrl + 'movies');\r\n    }\r\n\r\n    public deleteMovie(id: number) {\r\n        return this.http.delete(this.baseUrl + 'movies/' + id);\r\n    }\r\n\r\n    public getMovieById(id): Observable<Movie> {\r\n        return this.http.get<Movie>(this.baseUrl + 'movies/' + id);\r\n    }\r\n\r\n    public searchMoviesWithCategoryAndDirector(searchedValue: string): Observable<Movie[]> {\r\n        return this.http.get<Movie[]>(`${this.baseUrl}movies/search-movies-with-category-and-director/${searchedValue}`);\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { MovieListComponent } from './movies/movie-list/movie-list.component';\nimport { MovieComponent } from './movies/movie/movie.component';\nimport { CategoryListComponent } from './categories/category-list/category-list.component';\nimport { CategoryComponent } from './categories/category/category.component';\nimport { DirectorListComponent } from './directors/director-list/director-list.component';\nimport { DirectorComponent } from './directors/director/director.component';\n\n\nconst routes: Routes = [\n  { path: 'home', component: HomeComponent },\n  { path: 'movies', component: MovieListComponent },\n  { path: 'movie', component: MovieComponent },\n  { path: 'movie/:id', component: MovieComponent },\n  { path: 'categories', component: CategoryListComponent },\n  { path: 'category', component: CategoryComponent },\n  { path: 'category/:id', component: CategoryComponent },\n  { path: 'directors', component: DirectorListComponent },\n  { path: 'director', component: DirectorComponent },\n  { path: 'director/:id', component: DirectorComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'MoviesApp-Frontend';\n}\n","<app-nav></app-nav>\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { ConfirmationDialogComponent } from './confirmation-dialog/confirmation-dialog.component';\nimport { CategoryComponent } from './categories/category/category.component';\nimport { CategoryListComponent } from './categories/category-list/category-list.component';\nimport { DirectorComponent } from './directors/director/director.component';\nimport { DirectorListComponent } from './directors/director-list/director-list.component';\nimport { MovieComponent } from './movies/movie/movie.component';\nimport { MovieListComponent } from './movies/movie-list/movie-list.component';\nimport { NavComponent } from './nav/nav.component';\nimport { HomeComponent } from './home/home.component';\nimport { MoviesService } from './_services/movies.service';\nimport { CategoryService } from './_services/category.service';\nimport { ConfirmationDialogService } from './_services/confirmation-dialog.service';\nimport { DirectorService } from './_services/director.service';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ConfirmationDialogComponent,\n    CategoryComponent,\n    CategoryListComponent,\n    DirectorComponent,\n    DirectorListComponent,\n    MovieComponent,\n    MovieListComponent,\n    NavComponent,\n    HomeComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule,\n    AppRoutingModule,\n    NgbModule\n  ],\n  providers: [\n    MoviesService,\n    CategoryService,\n    DirectorService,\n    ConfirmationDialogService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { CategoryService } from 'src/app/_services/category.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { ConfirmationDialogService } from 'src/app/_services/confirmation-dialog.service';\nimport { Subject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-category-list',\n  templateUrl: './category-list.component.html',\n  styleUrls: ['./category-list.component.css']\n})\n\nexport class CategoryListComponent implements OnInit{\n  public categories: any;\n  public searchTerm: string;\n  public searchValueChanged: Subject<string> = new Subject<string>();\n\n  constructor(private router: Router, private service: CategoryService, private toastr: ToastrService, \n                private confirmationDialogService: ConfirmationDialogService) { }\n\n  ngOnInit(): void {\n      this.getCategories();\n      this.searchValueChanged.pipe(debounceTime(1000))\n      .subscribe(() => {\n        this.search();\n      });\n    }\n  \n  private getCategories(){\n    this.service.getCategories().subscribe(categories => {\n      this.categories = categories;\n    })\n  }\n\n  private search() {\n    if (this.searchTerm !== '') {\n      this.service.searchCategories(this.searchTerm).subscribe(category => {\n        this.categories = category;\n      }, error => {\n        this.categories = [];\n      });\n    } else {\n      this.service.getCategories().subscribe(categories => this.categories = categories);\n    }\n  }\n\n  public addCategory() {\n    this.router.navigate(['/category']);\n  }\n\n  public updateCategory(categoryId: number) {\n    this.router.navigate(['/category/' + categoryId]);\n  }\n  \n  public deleteCategory(categoryId: number){\n    this.confirmationDialogService.confirm('Oprez', 'Jeste li sigurni da želite obrisati ovu kategoriju??')\n      .then(() =>\n        this.service.deleteCategory(categoryId).subscribe(() => {\n          this.toastr.success('Kategorija je obrisana.');\n          this.getCategories();\n        },\n          error => {\n            this.toastr.error('Došlo je do pogreške pri brisanju kategorije.');\n          }))\n      .catch(() => '');\n  }\n\n  public searchCategories() {\n    this.searchValueChanged.next();\n  }  \n}","<div class=\"jumbtron\">\n    <h1 class=\"display-4 text-center\">Kategorije</h1>\n</div>\n\n<div class=\"col-md-12\">\n    <button type=\"button\" class=\"btn btn-success\" (click)=\"addCategory()\">Nova kategorija</button>\n    <hr/>\n\n    <div class=\"form-group\">\n        <label for=\"Search\">Pretraživanje</label>\n        <div class=\"input-group\">\n            <div class=\"input-group-prepend\">\n                <div class=\"input-group-text bg-white\">\n                    <i class=\"fas fas-search\"></i>\n                </div>\n            </div>\n            <input type=\"text\" [(ngModel)]=\"searchTerm\" (ngModelChange)=\"searchCategories()\"/>\n        </div>\n    </div>\n\n    <table class=\"table-condensed table-bordered table-striped\">\n        <thead>\n            <tr>\n                <th class=\"col-md-7\">\n                    Kategorija\n                </th>\n                <th>\n                    Opcije\n                </th>\n            </tr>\n        </thead>\n            <tbody>\n                <tr *ngFor=\"let category of categories\">\n                    <td>\n                        {{category.name}}\n                    </td>\n                    <td class=\"action-button-column\">\n                        <a title=\"Uredi\" (click)=\"updateCategory(category.id)\">\n                            <i class=\"fas fa-edit\"></i>\n                        </a>\n                        <a title=\"Obriši\" (click)=\"deleteCategory(category.id)\" style=\"margin-left: 12px\">\n                            <i class=\"fas fa-trash-alt\"></i>\n                        </a>\n                    </td>\n                </tr>\n            </tbody>\n    </table>    \n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { NgForm } from '@angular/forms';\nimport { Category } from 'src/app/_models/Category';\nimport { ToastrService } from 'ngx-toastr';\nimport { CategoryService } from 'src/app/_services/category.service';\n\n@Component({\n  selector: 'app-category',\n  templateUrl: './category.component.html',\n  styleUrls: ['./category.component.css']\n})\nexport class CategoryComponent implements OnInit {\n  public formData: Category;\n\n  constructor(public service: CategoryService,\n              private router: Router,\n              private route: ActivatedRoute,\n              private toastr: ToastrService) { }\n\n  ngOnInit() {\n    this.resetForm();\n\n    let id;\n    this.route.params.subscribe(params => {\n      id = params['id'];\n    });\n\n    if (id != null) {\n      this.service.getCategoryById(id).subscribe(category => {\n        this.formData = category;\n      }, error => {\n        this.toastr.error('Došlo je do pogreške pri dohvaćanju kategorije.');\n      });\n    } else {\n      this.resetForm();\n    }\n  }\n\n private resetForm(form?: NgForm) {\n    if (form != null) {\n      form.form.reset();\n    }\n\n    this.formData = {\n      id: 0,\n      name: ''\n    };\n  }\n\n  public onSubmit(form: NgForm) {\n    if (form.value.id === 0) {\n      this.insertCategory(form);\n    } else {\n      this.updateCategory(form);\n    }\n  }\n\n  public insertCategory(form: NgForm) {\n    this.service.addCategory(form.form.value).subscribe(() => {\n      this.toastr.success('Uspješno ste dodali kategoriju.');\n      this.resetForm(form);\n      this.router.navigate(['/categories']);\n    }, () => {\n      this.toastr.error('Došlo je do pogreške pri dodavanju kategorije.');\n    });\n  }\n\n  public updateCategory(form: NgForm) {\n    this.service.updateCategory(form.form.value.id, form.form.value).subscribe(() => {\n      this.toastr.success('Uspješno ste ažurirali kategoriju.');\n      this.resetForm(form);\n      this.router.navigate(['/categories']);\n    }, () => {\n      this.toastr.error('Došlo je do pogreške pri ažuriranju kategorije.');\n    });\n  }\n\n  public cancel() {\n    this.router.navigate(['/categories']);\n  }\n}\n","<div class=\"jumbtron\">\n    <form #form=\"ngForm\" (submit)=\"onSubmit(form)\" autocomplete=\"off\" class=\"col-md-5 form\">\n      <h2 class=\"text-center text-primary\">Kategorija</h2>\n      <input type=\"hidden\" name=\"id\" #id=\"ngModel\" [(ngModel)]=\"formData.id\">\n      <div class=\"form-group\">\n        <input name=\"name\" #name=\"ngModel\" [(ngModel)]=\"formData.name\" class=\"form-control\" required\n          [ngClass]=\"{'is-invalid': form.controls['name']?.invalid && form.controls['name']?.touched}\"\n          placeholder=\"Kategorija\">\n        <div class=\"invalid-feedback\" *ngIf=\"name.invalid && name.touched\">Molimo, unesite naziv kategorije.</div>\n      </div>\n      <div class=\"form-group text-center\">\n        <button class=\"btn btn-success mr-2\" [disabled]=\"form.invalid\" type=\"submit\">Spremi</button>\n        <button class=\"btn btn-default\" type=\"button\" (click)=\"cancel()\">Odustani</button>\n      </div>\n    </form>\n  </div>","import { Component, Input, OnInit } from '@angular/core';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'app-confirmation-dialog',\n  templateUrl: './confirmation-dialog.component.html',\n  styleUrls: ['./confirmation-dialog.component.css']\n})\nexport class ConfirmationDialogComponent implements OnInit {\n\n  @Input() title: string;\n  @Input() message: string;\n  @Input() btnOkText: string;\n  @Input() btnCancelText: string;\n\n  constructor(private activeModal: NgbActiveModal) { }\n\n  ngOnInit() {\n  }\n\n  public decline() {\n    this.activeModal.close(false);\n  }\n\n  public accept() {\n    this.activeModal.close(true);\n  }\n\n  public dismiss() {\n    this.activeModal.dismiss();\n  }\n}\n\n","<div class=\"modal-header\">\n    <h4 class=\"modal-title\" id=\"modal-title\">{{ title }}</h4>\n    <button type=\"button\" class=\"close\" aria-describedby=\"modal-title\" (click)=\"dismiss()\">\n        <span aria-hidden=\"true\">&times;</span>\n    </button>\n</div>\n<div class=\"modal-body\">\n    {{ message }}\n</div>\n<div class=\"modal-footer\">\n    <button type=\"button\" class=\"btn btn-info\" (click)=\"dismiss()\">{{ btnCancelText }}</button>\n    <button type=\"button\" class=\"btn btn-danger\" (click)=\"accept()\"> {{ btnOkText }}</button>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { DirectorService } from 'src/app/_services/director.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { ConfirmationDialogService } from 'src/app/_services/confirmation-dialog.service';\nimport { Subject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-director-list',\n  templateUrl: './director-list.component.html',\n  styleUrls: ['./director-list.component.css']\n})\n\nexport class DirectorListComponent implements OnInit{\n  public directors: any;\n  public searchTerm: string;\n  public searchValueChanged: Subject<string> = new Subject<string>();\n\n  constructor(private router: Router, private service: DirectorService, private toastr: ToastrService, \n                private confirmationDialogService: ConfirmationDialogService) { }\n\n  ngOnInit(): void {\n      this.getDirectors();\n      this.searchValueChanged.pipe(debounceTime(1000))\n      .subscribe(() => {\n        this.search();\n      });\n    }\n  \n  private getDirectors(){\n    this.service.getDirectors().subscribe(directors => {\n      this.directors = directors;\n    })\n  }\n\n  private search() {\n    if (this.searchTerm !== '') {\n      this.service.searchDirectors(this.searchTerm).subscribe(director => {\n        this.directors = director;\n      }, error => {\n        this.directors = [];\n      });\n    } else {\n      this.service.getDirectors().subscribe(directors => this.directors = directors);\n    }\n  }\n\n  public addDirector() {\n    this.router.navigate(['/director']);\n  }\n\n  public updateDirector(directorId: number) {\n    this.router.navigate(['/director/' + directorId]);\n  }\n  \n  public deleteDirector(directorId: number){\n    this.confirmationDialogService.confirm('Oprez', 'Jeste li sigurni da želite obrisati ovog redatelja?')\n      .then(() =>\n        this.service.deleteDirector(directorId).subscribe(() => {\n          this.toastr.success('Redatelj je obrisan.');\n          this.getDirectors();\n        },\n          error => {\n            this.toastr.error('Došlo je do pogreške pri brisanju redatelja.');\n          }))\n      .catch(() => '');\n  }\n\n  public searchDirectors() {\n    this.searchValueChanged.next();\n  }  \n}","<div class=\"jumbtron\">\n    <h1 class=\"display-4 text-center\">Redatelji</h1>\n</div>\n\n<div class=\"col-md-12\">\n    <button type=\"button\" class=\"btn btn-success\" (click)=\"addDirector()\">Novi redatelj</button>\n    <hr/>\n\n    <div class=\"form-group\">\n        <label for=\"Search\">Pretraživanje</label>\n        <div class=\"input-group\">\n            <div class=\"input-group-prepend\">\n                <div class=\"input-group-text bg-white\">\n                    <i class=\"fas fas-search\"></i>\n                </div>\n            </div>\n            <input type=\"text\" [(ngModel)]=\"searchTerm\" (ngModelChange)=\"searchDirectors()\"/>\n        </div>\n    </div>\n\n    <table class=\"table-condensed table-bordered table-striped\">\n        <thead>\n            <tr>\n                <th class=\"col-md-7\">\n                    Redatelj\n                </th>\n                <th>\n                    Opcije\n                </th>\n            </tr>\n        </thead>\n            <tbody>\n                <tr *ngFor=\"let director of directors\">\n                    <td>\n                        {{director.name}}\n                    </td>\n                    <td class=\"action-button-column\">\n                        <a title=\"Uredi\" (click)=\"updateDirector(director.id)\">\n                            <i class=\"fas fa-edit\"></i>\n                        </a>\n                        <a title=\"Obriši\" (click)=\"deleteDirector(director.id)\" style=\"margin-left: 12px\">\n                            <i class=\"fas fa-trash-alt\"></i>\n                        </a>\n                    </td>\n                </tr>\n            </tbody>\n    </table>    \n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { NgForm } from '@angular/forms';\nimport { Director } from 'src/app/_models/Director';\nimport { ToastrService } from 'ngx-toastr';\nimport { DirectorService } from 'src/app/_services/director.service';\n\n@Component({\n  selector: 'app-director',\n  templateUrl: './director.component.html',\n  styleUrls: ['./director.component.css']\n})\nexport class DirectorComponent implements OnInit {\n  public formData: Director;\n\n  constructor(public service: DirectorService,\n              private router: Router,\n              private route: ActivatedRoute,\n              private toastr: ToastrService) { }\n\n  ngOnInit() {\n    this.resetForm();\n\n    let id;\n    this.route.params.subscribe(params => {\n      id = params['id'];\n    });\n\n    if (id != null) {\n      this.service.getDirectorById(id).subscribe(director => {\n        this.formData = director;\n      }, error => {\n        this.toastr.error('Došlo je do pogreške pri dohvaćanju redatelja.');\n      });\n    } else {\n      this.resetForm();\n    }\n  }\n\n private resetForm(form?: NgForm) {\n    if (form != null) {\n      form.form.reset();\n    }\n\n    this.formData = {\n      id: 0,\n      name: '',\n      lastname: ''\n    };\n  }\n\n  public onSubmit(form: NgForm) {\n    if (form.value.id === 0) {\n      this.insertDirector(form);\n    } else {\n      this.updateDirector(form);\n    }\n  }\n\n  public insertDirector(form: NgForm) {\n    this.service.addDirector(form.form.value).subscribe(() => {\n      this.toastr.success('Uspješno ste dodali redatelja.');\n      this.resetForm(form);\n      this.router.navigate(['/directors']);\n    }, () => {\n      this.toastr.error('Došlo je do pogreške pri dodavanju redatelja.');\n    });\n  }\n\n  public updateDirector(form: NgForm) {\n    this.service.updateDirector(form.form.value.id, form.form.value).subscribe(() => {\n      this.toastr.success('Uspješno ste ažurirali redatelja');\n      this.resetForm(form);\n      this.router.navigate(['/directors']);\n    }, () => {\n      this.toastr.error('Došlo je do pogreške pri ažuriranju redatelja.');\n    });\n  }\n\n  public cancel() {\n    this.router.navigate(['/directors']);\n  }\n}\n","<div class=\"jumbtron\">\n    <form #form=\"ngForm\" (submit)=\"onSubmit(form)\" autocomplete=\"off\" class=\"col-md-5 form\">\n      <h2 class=\"text-center text-primary\">Redatelj</h2>\n      <input type=\"hidden\" name=\"id\" #id=\"ngModel\" [(ngModel)]=\"formData.id\">\n      <div class=\"form-group\">\n        <input name=\"name\" #name=\"ngModel\" [(ngModel)]=\"formData.name\" class=\"form-control\" required\n          [ngClass]=\"{'is-invalid': form.controls['name']?.invalid && form.controls['name']?.touched}\"\n          placeholder=\"Ime redatelja\">\n        <div class=\"invalid-feedback\" *ngIf=\"name.invalid && name.touched\">Molimo, unesite naziv kategorije.</div>\n      </div>\n      <div class=\"form-group\">\n        <input name=\"lastname\" #name=\"ngModel\" [(ngModel)]=\"formData.lastname\" class=\"form-control\" required\n          [ngClass]=\"{'is-invalid': form.controls['lastname']?.invalid && form.controls['lastname']?.touched}\"\n          placeholder=\"Prezime redatelja\">\n        <div class=\"invalid-feedback\" *ngIf=\"name.invalid && name.touched\">Molimo, unesite naziv kategorije.</div>\n      </div>\n      <div class=\"form-group text-center\">\n        <button class=\"btn btn-success mr-2\" [disabled]=\"form.invalid\" type=\"submit\">Spremi</button>\n        <button class=\"btn btn-default\" type=\"button\" (click)=\"cancel()\">Odustani</button>\n      </div>\n    </form>\n  </div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"title-home container mt-5 text-center\">\n    <h1>Dobrodošli u Movies!</h1>\n    <p class=\"lead\">Platforma za pretraživanje filmova</p>\n    <div class=\"text-center\">\n        <button class=\"btn btn-info btn-lg\" [routerLink]=\"['/movies']\">Pogledajte filmove</button>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { MoviesService } from 'src/app/_services/movies.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { ConfirmationDialogService } from 'src/app/_services/confirmation-dialog.service';\nimport { Subject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-movie-list',\n  templateUrl: './movie-list.component.html',\n  styleUrls: ['./movie-list.component.css']\n})\nexport class MovieListComponent implements OnInit {\n  public movies: any;\n  public listComplet: any;\n  public searchTerm: string;\n  public searchValueChanged: Subject<string> = new Subject<string>();\n\n  constructor(private router: Router,\n              private service: MoviesService,\n              private toastr: ToastrService,\n              private confirmationDialogService: ConfirmationDialogService) { }\n\n  ngOnInit() {\n    this.getValues();\n\n    this.searchValueChanged.pipe(debounceTime(1000))\n    .subscribe(() => {\n      this.search();\n    });\n  }\n\n  private getValues() {\n\n    this.service.getMovies().subscribe(movies => {\n      this.movies = movies;\n      this.listComplet = movies;\n    });\n  }\n\n  public addMovie() {\n    this.router.navigate(['/movie']);\n  }\n\n  public updateMovie(movieId: number) {\n    this.router.navigate(['/movie/' + movieId]);\n  }\n\n  public deleteMovie(movieId: number) {\n    this.confirmationDialogService.confirm('Oprez', 'Jeste li sigurni da želite obrisati ovaj film?')\n      .then(() =>\n        this.service.deleteMovie(movieId).subscribe(() => {\n          this.toastr.success('Film je izbrisan.');\n          this.getValues();\n        },\n          err => {\n            this.toastr.error('Došlo je do pogreške pri brisanju filma.');\n          }))\n      .catch(() => '');\n  }\n\n  public searchMovies() {\n    this.searchValueChanged.next();\n  }\n\n  private search() {\n    if (this.searchTerm !== '') {\n      this.service.searchMoviesWithCategoryAndDirector(this.searchTerm).subscribe(movie => {\n        this.movies = movie;\n      }, error => {\n        this.movies = [];\n      });\n    } else {\n      this.service.getMovies().subscribe(movies => this.movies = movies);\n    }\n  }\n}\n","<div class=\"jumbtron\">\n    <h1 class=\"display-4 text-center\">Filmovi</h1>\n  </div>\n  \n  <div class=\"col-md-12\">\n    <button type=\"button\" class=\"btn btn-success\" (click)=\"addMovie()\">Novi film</button>\n    <hr/>\n  \n    <div class=\"form-group\">\n        <label for=\"Search\">Pretraživanje</label>\n        <div class=\"input-group\">\n          <div class=\"input-group-prepend\">\n            <div class=\"input-group-text bg-white\">\n                <i class=\"fas fa-search\"></i>\n            </div>\n          </div>\n          <input type=\"text\" [(ngModel)]=\"searchTerm\" (ngModelChange)=\"searchMovies()\"/>\n        </div>\n      </div>\n      \n    <table class=\"table table-condensed table-bordered table-striped table-hover\">\n        <thead>\n            <tr>\n            <th>Naziv filma</th>\n            <th>Opis</th>\n            <th>Kategorija</th>\n            <th>Redatelj</th>\n            <th>Godina</th>\n            <th>Opcije</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let movie of movies\">\n            <td>{{movie.name}}</td>\n            <td>{{movie.description.length > 25 ? (movie.description | slice : 0:25) + '...' : movie.description}}</td>\n            <td>{{movie.categoryName}}</td>\n            <td>{{movie.directorName}}, \" \", {{movie.directorLastname}}</td>\n            <td>{{movie.year}}</td>\n            <td class=\"action-button-column\">\n                <a title=\"Uredi\" (click)=\"updateMovie(movie.id)\"><i class=\"fas fa-edit\"></i> </a>\n                <a title=\"Obriši\" (click)=\"deleteMovie(movie.id)\" style=\"margin-left: 12px;\"><i class=\"fas fa-trash-alt\"></i> </a>\n            </td>\n          </tr>\n        </tbody>\n  \n    </table>\n  </div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { NgForm } from '@angular/forms';\nimport { Movie } from 'src/app/_models/Movie';\nimport { MoviesService } from 'src/app/_services/movies.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { CategoryService } from 'src/app/_services/category.service';\nimport { DirectorService } from 'src/app/_services/director.service';\n\n@Component({\n  selector: 'app-movie',\n  templateUrl: './movie.component.html',\n  styleUrls: ['./movie.component.css']\n})\nexport class MovieComponent implements OnInit {\n  public formData: Movie;\n  public categories: any;\n  public directors: any;\n\n  constructor(public service: MoviesService,\n              private categoryService: CategoryService,\n              private directorService: DirectorService,\n              private router: Router,\n              private route: ActivatedRoute,\n              private toastr: ToastrService) { }\n\n  ngOnInit() {\n    this.resetForm();\n    let id;\n    this.route.params.subscribe(params => {\n      id = params['id'];\n    });\n\n    if (id != null) {\n      this.service.getMovieById(id).subscribe(movie => {\n        this.formData = movie;\n        }, err => {\n        this.toastr.error('Došlo je do pogreške pri dohvaćanju podataka.');\n      });\n    } else {\n      this.resetForm();\n    }\n\n    this.categoryService.getCategories().subscribe(categories => {\n      this.categories = categories;\n    }, err => {\n      this.toastr.error('Došlo je do pogreške pri dohvaćanju podataka.');\n    });\n\n    this.directorService.getDirectors().subscribe(directors => {\n      this.directors = directors;\n    }, err => {\n      this.toastr.error('Došlo je do pogreške pri dohvaćanju podataka.');\n    });\n  }\n\n  public onSubmit(form: NgForm) {\n    form.value.categoryId = Number(form.value.categoryId);\n    form.value.directorId = Number(form.value.directorId);\n    if (form.value.id === 0) {\n      this.insertRecord(form);\n    } else {\n      this.updateRecord(form);\n    }\n  }\n\n  public insertRecord(form: NgForm) {\n    this.service.addMovie(form.form.value).subscribe(() => {\n      this.toastr.success('Uspješno ste dodali film.');\n      this.resetForm(form);\n      this.router.navigate(['/movies']);\n    }, () => {\n      this.toastr.error('Došlo je do pogreške pri dodavanju podataka.');\n    });\n  }\n\n  public updateRecord(form: NgForm) {\n    this.service.updateMovie(form.form.value.id, form.form.value).subscribe(() => {\n      this.toastr.success('Uspješno ste ažurirali film.');\n      this.resetForm(form);\n      this.router.navigate(['/movies']);\n    }, () => {\n      this.toastr.error('Došlo je do pogreške pri ažuriranju podataka.');\n    });\n  }\n\n  public cancel() {\n    this.router.navigate(['/movies']);\n  }\n\n  private resetForm(form?: NgForm) {\n    if (form != null) {\n      form.form.reset();\n    }\n\n    this.formData = {\n      id: 0,\n      name: '',\n      description: '',\n      categoryId: null,\n      directorId: null,\n      year: null\n    };\n  }\n}","<div class=\"jumbtron\">\n    <form #form=\"ngForm\" (submit)=\"onSubmit(form)\" autocomplete=\"off\" class=\"col-md-5 form\">\n      <h2 class=\"text-center text-primary\">Film</h2>\n      <input type=\"hidden\" name=\"id\" #id=\"ngModel\" [(ngModel)]=\"formData.id\">\n\n      <div class=\"form-group\">\n        <input name=\"name\" #name=\"ngModel\" [(ngModel)]=\"formData.name\" class=\"form-control\" required\n          [ngClass]=\"{'is-invalid': form.controls['name']?.invalid && form.controls['name']?.touched}\" placeholder=\"Naziv\">\n        <div class=\"invalid-feedback\" *ngIf=\"name.invalid && name.touched\">Molimo, unesite naziv filma.</div>\n      </div>\n      <div class=\"form-group\">\n        <textarea name=\"description\" #name=\"ngModel\" [(ngModel)]=\"formData.description\" class=\"form-control\"\n          placeholder=\"Opis\"\n          [ngClass]=\"\"\n          required rows=\"4\"></textarea>\n        <div class=\"invalid-feedback\" *ngIf=\"\">Molimo, unesite opis filma.\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <select class=\"form-control\" name=\"categoryId\" #categoryId [(ngModel)]=\"formData.categoryId\" required>\n          <option value=\"null\" disabled selected hidden>Kategorija</option>\n          <option *ngFor=\"let category of categories\" value=\"{{category.id}}\">\n            {{category.name}}\n          </option>\n        </select>\n        <div class=\"invalid-feedback\" *ngIf=\"categoryId.invalid && categoryId.touched\">Molimo, odaberite kategoriju.</div>\n      </div>\n      <div class=\"form-group\">\n        <select class=\"form-control\" name=\"directorId\" #directorId [(ngModel)]=\"formData.directorId\" required>\n          <option value=\"null\" disabled selected hidden>Redetelj</option>\n          <option *ngFor=\"let director of directors\" value=\"{{director.id}}\">\n            {{director.name}}\" \"{{director.lastname}}\n          </option>\n        </select>\n        <div class=\"invalid-feedback\" *ngIf=\"directorId.invalid && directorId.touched\">Molimo, odaberite redatelja</div>\n      </div>\n      <div class=\"form-group\">\n        <input name=\"year\" #name=\"ngModel\" [(ngModel)]=\"formData.year\" class=\"form-control\" required\n          [ngClass]=\"\" placeholder=\"Godina\">\n        <div class=\"invalid-feedback\" *ngIf=\"\">Molimo, unesite godinu objavljivanja filma.</div>\n      </div>\n      \n      <div class=\"form-group text-center\">\n        <button class=\"btn btn-success mr-2\" [disabled]=\"form.invalid\" type=\"submit\">Spremi</button>\n        <button class=\"btn btn-default\" type=\"button\" (click)=\"cancel()\">Odustani</button>\n      </div>\n  \n    </form>\n  </div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<nav class=\"navbar navbar-expand-md navbar-dark fixed-top bg-primary\">\n    <a class=\"navbar-brand\" [routerLink]=\"['/home']\">The Movies</a>\n  \n    <ul class=\"navbar-nav mr-auto\">\n      <a class=\"nav-link\" [routerLink]=\"['/movies']\">Filmovi</a>\n      <a class=\"nav-link\" [routerLink]=\"['/categories']\">Kategorije</a>\n      <a class=\"nav-link\" [routerLink]=\"['/directors']\">Redatelji</a>\n    </ul>\n  </nav>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  baseUrl: 'https://localhost:5001/'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}